Index: src/main/java/bitc/ftp/teamproject/controller/MainController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/controller/MainController.java b/src/main/java/bitc/ftp/teamproject/controller/MainController.java
--- a/src/main/java/bitc/ftp/teamproject/controller/MainController.java	(revision 7e77c72e457c35d5f85d3226aab74a90c7a05e61)
+++ b/src/main/java/bitc/ftp/teamproject/controller/MainController.java	(revision 376c386b7ce6f47322f349381fa8caf59346dd58)
@@ -2,12 +2,18 @@
 
 import bitc.ftp.teamproject.dto.CategoryDTO;
 import bitc.ftp.teamproject.dto.UserDTO;
+import bitc.ftp.teamproject.dto.admin.AdminNoticeDTO;
 import bitc.ftp.teamproject.service.ProductService;
 import bitc.ftp.teamproject.service.UserService;
+import bitc.ftp.teamproject.service.admin.AdminNoticeService;
 import lombok.RequiredArgsConstructor;
+import org.springframework.security.crypto.password.PasswordEncoder;
 import org.springframework.stereotype.Controller;
 import org.springframework.ui.Model;
 import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.ModelAttribute;
+import org.springframework.web.bind.annotation.PostMapping;
+import org.springframework.web.servlet.mvc.support.RedirectAttributes;
 
 import java.security.Principal;
 import java.util.List;
@@ -18,6 +24,8 @@
 
 	private final ProductService pService;
 	private final UserService uService;
+	private final AdminNoticeService anService;
+	private final PasswordEncoder passwordEncoder;
 
 	@GetMapping("")
 	public String main(Model model, Principal principal){
@@ -36,11 +44,31 @@
 	}
 
 	@GetMapping("/register")
-	public String register(Model model){
+	public String register(Model model, @ModelAttribute("user")UserDTO userDTO){
 		List<CategoryDTO> c1DTO = pService.getAllCategory1();
 		List<CategoryDTO> c2DTO = pService.getAllCategory2();
 		model.addAttribute("category1List", c1DTO);
 		model.addAttribute("category2List", c2DTO);
 		return "register";
 	}
+
+	@PostMapping("/register")
+	public String register(@ModelAttribute("user")UserDTO userDTO, Model model, RedirectAttributes ra){
+		userDTO.setPw(passwordEncoder.encode(userDTO.getPw()));
+		uService.addRegister(userDTO);
+		ra.addFlashAttribute("register", "success");
+		return "redirect:/";
+	}
+
+	@GetMapping("/notice")
+	public String notice(@ModelAttribute("notice")AdminNoticeDTO adminNoticeDTO, Model model){
+		List<CategoryDTO> c1DTO = pService.getAllCategory1();
+		List<CategoryDTO> c2DTO = pService.getAllCategory2();
+		List<AdminNoticeDTO> noticeDTO = anService.getAllNotices(0);
+		model.addAttribute("category1List", c1DTO);
+		model.addAttribute("category2List", c2DTO);
+		model.addAttribute("noticeList", noticeDTO);
+
+		return "notice";
+	}
 }
Index: src/main/java/bitc/ftp/teamproject/controller/MyPageController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/controller/MyPageController.java b/src/main/java/bitc/ftp/teamproject/controller/MyPageController.java
--- a/src/main/java/bitc/ftp/teamproject/controller/MyPageController.java	(revision 7e77c72e457c35d5f85d3226aab74a90c7a05e61)
+++ b/src/main/java/bitc/ftp/teamproject/controller/MyPageController.java	(revision 376c386b7ce6f47322f349381fa8caf59346dd58)
@@ -4,12 +4,14 @@
 import bitc.ftp.teamproject.dto.myPage.*;
 import bitc.ftp.teamproject.service.MyPageService;
 import bitc.ftp.teamproject.service.ProductService;
-import bitc.ftp.teamproject.vo.myPage.MyPageBuyListVO;
+import bitc.ftp.teamproject.service.UserService;
 import lombok.RequiredArgsConstructor;
 import org.springframework.stereotype.Controller;
 import org.springframework.ui.Model;
 import org.springframework.web.bind.annotation.*;
+import org.springframework.web.servlet.mvc.support.RedirectAttributes;
 
+import java.security.Principal;
 import java.util.List;
 
 @Controller
@@ -18,54 +20,85 @@
 public class MyPageController {
 	private final MyPageService mpService;
 	private final ProductService pService;
+	private final UserService uService;
 
-	@GetMapping
-	public String userPage(Model model) {
+	@PostMapping
+	public String userPage(@RequestParam int userNo, Model model, Principal principal) {
 		List<CategoryDTO> c1DTO = pService.getAllCategory1();
 		List<CategoryDTO> c2DTO = pService.getAllCategory2();
 
 		model.addAttribute("category1List", c1DTO);
 		model.addAttribute("category2List", c2DTO);
 
+		if(principal != null){
+			UserDTO dto = uService.getUserById(principal.getName());
+			model.addAttribute("user", dto);
+		}
+
+		model.addAttribute("principal", principal);
+
 		return "myPage/myPage";
 	}
 
 	@GetMapping("/info")
-	public String myPageInfo(Model model, @ModelAttribute("user") MyPageUserDTO userDTO) {
+	public String myPageInfo(Model model, @ModelAttribute("user") MyPageUserDTO userDTO, Principal principal) {
 		List<CategoryDTO> c1DTO = pService.getAllCategory1();
 		List<CategoryDTO> c2DTO = pService.getAllCategory2();
 		model.addAttribute("category1List", c1DTO);
 		model.addAttribute("category2List", c2DTO);
 
-		int userNo = 2;
-		MyPageUserDTO userdto = mpService.getMyPageUser(userNo);
-		model.addAttribute("user", userdto);
+		UserDTO dto = null;
+
+		if(principal != null){
+			dto = uService.getUserById(principal.getName());
+			model.addAttribute("user", dto);
+		}
+
+		model.addAttribute("principal", principal);
+
 		return "myPage/myPageInfo";
 	}
 	@PostMapping("/info/update")
-	public String myPageInfoUpdate(Model model, @ModelAttribute("user")MyPageUserDTO userDTO) {
+	public String myPageInfoUpdate(RedirectAttributes ra, @ModelAttribute("user")MyPageUserDTO userDTO) {
 		mpService.updateMyPageUser(userDTO);
+		ra.addFlashAttribute("success", "success");
 		return "redirect:/mypage/info";
 	}
 
 	@GetMapping("/address")
-	public String myPageAddress(Model model, @ModelAttribute("user")MyPageUserDTO userDTO, @ModelAttribute("myPageAddressDTO") MyPageAddressDTO myPageAddressDTO) {
-		List<CategoryDTO> c1DTO = pService.getAllCategory1();
+	public String myPageAddress(Model model, @ModelAttribute("user")MyPageUserDTO userDTO, @ModelAttribute("myPageAddressDTO") MyPageAddressDTO myPageAddressDTO, Principal principal) {		List<CategoryDTO> c1DTO = pService.getAllCategory1();
 		List<CategoryDTO> c2DTO = pService.getAllCategory2();
 		model.addAttribute("category1List", c1DTO);
 		model.addAttribute("category2List", c2DTO);
 
-		userDTO.setUserNo(2);
+		UserDTO dto = null;
+
+		if(principal != null){
+			dto = uService.getUserById(principal.getName());
+			model.addAttribute("user", dto);
+		}
 
-		List<MyPageAddressDTO> dtoList = mpService.getMyPageAddress(userDTO.getUserNo());
+		model.addAttribute("principal", principal);
+
+		List<MyPageAddressDTO> dtoList = mpService.getMyPageAddress(dto.getUserNo());
 
 		model.addAttribute("addressList", dtoList);
 
 		return "myPage/myPageAddress";
 	}
 	@PostMapping("/address/register")
-	public String myPageAddressRegister(Model model, @ModelAttribute("user")MyPageUserDTO userDTO, @ModelAttribute("myPageAddressDTO")MyPageAddressDTO myPageAddressDTO ) {
-		myPageAddressDTO.setUserNo(2);
+	public String myPageAddressRegister(Model model, @ModelAttribute("user")MyPageUserDTO userDTO, @ModelAttribute("myPageAddressDTO")MyPageAddressDTO myPageAddressDTO, Principal principal ) {
+		UserDTO dto = null;
+
+		if(principal != null){
+			dto = uService.getUserById(principal.getName());
+			model.addAttribute("user", dto);
+		}
+
+		model.addAttribute("principal", principal);
+
+		myPageAddressDTO.setUserNo(dto.getUserNo());
+
 		if(myPageAddressDTO.getAddressListNo() == 0)
 			mpService.insertMyPageAddress(myPageAddressDTO);
 		else {
@@ -82,15 +115,22 @@
 	}
 
 	@GetMapping("/question")
-	public String myPageQuestion(Model model, @ModelAttribute("user")MyPageUserDTO userDTO, @ModelAttribute("myPageQuestionDTO") MyPageQuestionDTO questionDTO){
+	public String myPageQuestion(Principal principal, Model model, @ModelAttribute("user")MyPageUserDTO userDTO, @ModelAttribute("myPageQuestionDTO") MyPageQuestionDTO questionDTO){
 		List<CategoryDTO> c1DTO = pService.getAllCategory1();
 		List<CategoryDTO> c2DTO = pService.getAllCategory2();
 		model.addAttribute("category1List", c1DTO);
 		model.addAttribute("category2List", c2DTO);
 
-		userDTO.setUserNo(2);
+		UserDTO dto = null;
+
+		if(principal != null){
+			dto = uService.getUserById(principal.getName());
+			model.addAttribute("user", dto);
+		}
 
-		List<MyPageQuestionDTO> dtoList = mpService.getMyPageQuestion(userDTO.getUserNo());
+		model.addAttribute("principal", principal);
+
+		List<MyPageQuestionDTO> dtoList = mpService.getMyPageQuestion(dto.getUserNo());
 
 		model.addAttribute("qDTOList", dtoList);
 
@@ -108,10 +148,19 @@
 	}
 
 	@GetMapping("/cart")
-	public String myPageCart(Model model, @ModelAttribute("user")MyPageUserDTO myPageUserDTO){
+	public String myPageCart(Principal principal, Model model, @ModelAttribute("user")MyPageUserDTO myPageUserDTO){
 		categoryTest(model);
 
-		myPageUserDTO.setUserNo(2);
+		UserDTO dto = null;
+
+		if(principal != null){
+			dto = uService.getUserById(principal.getName());
+			model.addAttribute("user", dto);
+		}
+
+		model.addAttribute("principal", principal);
+
+		myPageUserDTO.setUserNo(dto.getUserNo());
 		List<MyPageCartDTO> cartDTOList = mpService.getMyPageCart(myPageUserDTO.getUserNo());
 		model.addAttribute("cartList", cartDTOList);
 		return "myPage/myPageCart";
@@ -123,10 +172,19 @@
 	}
 
 	@GetMapping("/buylist")
-	public String myPageBuyList(Model model, @ModelAttribute("user")MyPageUserDTO myPageUserDTO ){
+	public String myPageBuyList(Principal principal, Model model, @ModelAttribute("user")MyPageUserDTO myPageUserDTO ){
 		categoryTest(model);
 
-		myPageUserDTO.setUserNo(2);
+		UserDTO dto = null;
+
+		if(principal != null){
+			dto = uService.getUserById(principal.getName());
+			model.addAttribute("user", dto);
+		}
+
+		model.addAttribute("principal", principal);
+
+		myPageUserDTO.setUserNo(dto.getUserNo());
 
 		List<MyPageBuyListDTO> buyListDTOList = mpService.getMyPageBuyList(myPageUserDTO.getUserNo());
 		model.addAttribute("buyList", buyListDTOList);
Index: src/main/java/bitc/ftp/teamproject/controller/ProductController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/controller/ProductController.java b/src/main/java/bitc/ftp/teamproject/controller/ProductController.java
--- a/src/main/java/bitc/ftp/teamproject/controller/ProductController.java	(revision 7e77c72e457c35d5f85d3226aab74a90c7a05e61)
+++ b/src/main/java/bitc/ftp/teamproject/controller/ProductController.java	(revision 376c386b7ce6f47322f349381fa8caf59346dd58)
@@ -2,14 +2,22 @@
 
 
 import bitc.ftp.teamproject.dto.CategoryDTO;
+import bitc.ftp.teamproject.dto.UserDTO;
+import bitc.ftp.teamproject.dto.myPage.MyPageAddressDTO;
 import bitc.ftp.teamproject.dto.product.*;
 import bitc.ftp.teamproject.service.ProductService;
 
+import bitc.ftp.teamproject.service.UserService;
+import jakarta.servlet.http.HttpServletRequest;
 import lombok.RequiredArgsConstructor;
+import org.springframework.http.HttpRequest;
 import org.springframework.stereotype.Controller;
 import org.springframework.ui.Model;
 import org.springframework.web.bind.annotation.*;
+import org.springframework.web.servlet.mvc.support.RedirectAttributes;
 
+import java.security.Principal;
+import java.util.ArrayList;
 import java.util.List;
 
 @Controller
@@ -18,6 +26,7 @@
 public class ProductController {
 
     private final ProductService pService;
+    private final UserService uService;
 
     public void categoryTest(Model model){
         List<CategoryDTO> c1DTO = pService.getAllCategory1();
@@ -27,66 +36,131 @@
     }
 
     @GetMapping("/{category2No}")
-    public String getProductList(@PathVariable int category2No, Model model) {
+    public String getProductList(@PathVariable int category2No, Model model, Principal principal) {
         List<ProductDTO> productList = pService.getAllProducts(category2No);
         List<CategoryDTO> category1List = pService.getAllCategory1();
         List<CategoryDTO> category2List = pService.getAllCategory2();
         model.addAttribute("pList", productList);
         model.addAttribute("category1List", category1List);
         model.addAttribute("category2List", category2List);
+
+        if(principal != null){
+            UserDTO dto = uService.getUserById(principal.getName());
+            model.addAttribute("user", dto);
+        }
+
+        model.addAttribute("principal", principal);
+
         return "product/product";
     }
-
     @GetMapping("/addcart/{productNo}")
-    public String addProduct(@PathVariable int productNo, Model model) {
+    public String addProduct(@PathVariable int productNo, Model model, Principal principal) {
         AddCartDTO dto = new AddCartDTO();
+        UserDTO udto = null;
         dto.setProductNo(productNo);
-        dto.setUserNo(2);
+
+
+        if(principal != null){
+            udto = uService.getUserById(principal.getName());
+            model.addAttribute("user", udto);
+        }
+
+        if(principal == null){
+            return "redirect:/";
+        }
+        dto.setUserNo(udto.getUserNo());
         pService.addCartDTO(dto);
+        model.addAttribute("principal", principal);
+
         return "redirect:/product/detail/" + productNo;
     }
-
-    @GetMapping("/detail/{productNo}")
-    public String getProductDetail(@PathVariable int productNo, @ModelAttribute("objectDTO") BuyDTO buyDTO, Model model) {
-
-        ProductDetailDTO productDetail = pService.getProductDetail(productNo);
-        List<ColorDTO> colorDTOList = pService.getAllColor(productNo);
-        List<SizeDTO> sizeDTOList = pService.getAllSize(productNo);
-        List<CategoryDTO> category1List = pService.getAllCategory1();
-        List<CategoryDTO> category2List = pService.getAllCategory2();
-
-        model.addAttribute("pd", productDetail);
-        model.addAttribute("colorList", colorDTOList);
-        model.addAttribute("sizeList", sizeDTOList);
-        model.addAttribute("category1List", category1List);
-        model.addAttribute("category2List", category2List);
-
-        return "product/productDetail";
-    }
-
     @PostMapping("/payment")
-    public String payment(@ModelAttribute("objectDTO")BuyDTO buyDTO, Model model) {
+    public String payment(@ModelAttribute("objectDTO")BuyDTO buyDTO, Model model, Principal principal, @ModelAttribute("myPageAddressDTO") MyPageAddressDTO myPageAddressDTO) {
         categoryTest(model);
-        int userNo = 2;
-        ProductUserDTO productUserDTO = pService.getUserVO(userNo);
+        UserDTO dto = null;
+        if(principal != null){
+            dto = uService.getUserById(principal.getName());
+            model.addAttribute("user", dto);
+        }
+
+        ProductUserDTO productUserDTO = pService.getUserVO(dto.getUserNo());
         ProductDetailDTO productDetail = pService.getProductDetail(buyDTO.getProductNo());
-        List<AddressDTO> addressDTOList = pService.getAddressVO(userNo);
+        List<AddressDTO> addressDTOList = pService.getAddressVO(dto.getUserNo());
         ColorDTO colorDTO = pService.getOneColorVO(buyDTO.getColorNo());
         SizeDTO sizeDTO = pService.getOneSizeVO(buyDTO.getSizeNo());
 
-        model.addAttribute("colorOneDTO", colorDTO);
-        model.addAttribute("sizeOneDTO", sizeDTO);
         model.addAttribute("userDTO", productUserDTO);
         model.addAttribute("pd", productDetail);
         model.addAttribute("addressDTOList", addressDTOList);
+        model.addAttribute("colorOneDTO", colorDTO);
+        model.addAttribute("sizeOneDTO", sizeDTO);
+        model.addAttribute("principal", principal);
+
 
         return "product/payment";
     }
-
     @PostMapping("/payment/buy")
-    public String buyProduct(@ModelAttribute("objectDTO")BuyDTO buyDTO, Model model) {
+    public String buyProduct(@ModelAttribute("objectDTO")BuyDTO buyDTO, Model model, Principal principal, RedirectAttributes ra) {
         pService.buyDTO(buyDTO);
-        model.addAttribute("test", "success");
+
+        ra.addFlashAttribute("success", "success");
+
+        if(principal != null){
+            UserDTO dto = uService.getUserById(principal.getName());
+            model.addAttribute("user", dto);
+        }
+
+        model.addAttribute("principal", principal);
+
         return "redirect:/";
     }
+    @GetMapping("/detail/{productNo}")
+    public String getProductDetail(@PathVariable int productNo, @ModelAttribute("objectDTO") BuyDTO buyDTO, Model model, Principal principal) {
+
+        UserDTO dto=null;
+
+        if(principal != null){
+            dto = uService.getUserById(principal.getName());
+            List<QuestionDTO> questionList = pService.getQuestionList(productNo, dto.getUserNo());
+
+            List<List<AnswerDTO>> answerListList = new ArrayList<>();
+
+			for (QuestionDTO questionDTO : questionList) {
+				List<AnswerDTO> answerList = pService.getAnswerList(questionDTO.getQuestionNo());
+				answerListList.add(answerList);
+			}
+
+            model.addAttribute("user", dto);
+            model.addAttribute("questionList", questionList);
+            model.addAttribute("answerListList", answerListList);
+        }
+
+        ProductDetailDTO productDetail = pService.getProductDetail(productNo);
+        List<ColorDTO> colorDTOList = pService.getAllColor(productNo);
+        List<SizeDTO> sizeDTOList = pService.getAllSize(productNo);
+        List<CategoryDTO> category1List = pService.getAllCategory1();
+        List<CategoryDTO> category2List = pService.getAllCategory2();
+
+        model.addAttribute("pd", productDetail);
+        model.addAttribute("colorList", colorDTOList);
+        model.addAttribute("sizeList", sizeDTOList);
+        model.addAttribute("category1List", category1List);
+        model.addAttribute("category2List", category2List);
+        model.addAttribute("principal", principal);
+
+        return "product/productDetail";
+    }
+    @PostMapping("/detail/{productNo}/questionAdd")
+    public String addQustion(@PathVariable int productNo, @ModelAttribute("questionVO")QuestionDTO questionDTO, Model model, Principal principal){
+        UserDTO dto = null;
+        if(principal != null){
+            dto = uService.getUserById(principal.getName());
+            model.addAttribute("user", dto);
+        }
+        questionDTO.setProductNo(productNo);
+        questionDTO.setUserNo(dto.getUserNo());
+        pService.addQuestion(questionDTO);
+
+        return "redirect:/product/detail/" + productNo;
+    }
 }
\ No newline at end of file
Index: src/main/java/bitc/ftp/teamproject/dto/product/ProductDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/dto/product/ProductDTO.java b/src/main/java/bitc/ftp/teamproject/dto/product/ProductDTO.java
--- a/src/main/java/bitc/ftp/teamproject/dto/product/ProductDTO.java	(revision 7e77c72e457c35d5f85d3226aab74a90c7a05e61)
+++ b/src/main/java/bitc/ftp/teamproject/dto/product/ProductDTO.java	(revision 376c386b7ce6f47322f349381fa8caf59346dd58)
@@ -8,11 +8,14 @@
 @NoArgsConstructor
 @ToString
 public class ProductDTO {
-
     private int productNo;
     private String name;
     private int price;
+
     private int category2No;
+    private int category1No;
+    private String category1Name;
+    private String category2Name;
     private String photoName;
 
 }
Index: src/main/java/bitc/ftp/teamproject/mapper/MyPageMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/mapper/MyPageMapper.java b/src/main/java/bitc/ftp/teamproject/mapper/MyPageMapper.java
--- a/src/main/java/bitc/ftp/teamproject/mapper/MyPageMapper.java	(revision 7e77c72e457c35d5f85d3226aab74a90c7a05e61)
+++ b/src/main/java/bitc/ftp/teamproject/mapper/MyPageMapper.java	(revision 376c386b7ce6f47322f349381fa8caf59346dd58)
@@ -23,4 +23,5 @@
 	void deleteMyPageQuestion(int questionNo);
 	void deleteMyPageCart(int cartNo);
 
+
 }
Index: src/main/java/bitc/ftp/teamproject/mapper/ProductMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/mapper/ProductMapper.java b/src/main/java/bitc/ftp/teamproject/mapper/ProductMapper.java
--- a/src/main/java/bitc/ftp/teamproject/mapper/ProductMapper.java	(revision 7e77c72e457c35d5f85d3226aab74a90c7a05e61)
+++ b/src/main/java/bitc/ftp/teamproject/mapper/ProductMapper.java	(revision 376c386b7ce6f47322f349381fa8caf59346dd58)
@@ -27,4 +27,8 @@
 
     void buyVO(BuyVO buyVO);
 
+    List<QuestionVO> getQuestionList(int productNo, int userNo);
+    List<AnswerVO> getAnswerList(int questionNo);
+    void addQuestion(QuestionVO questionVO);
+
 }
Index: src/main/java/bitc/ftp/teamproject/mapper/UserMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/mapper/UserMapper.java b/src/main/java/bitc/ftp/teamproject/mapper/UserMapper.java
--- a/src/main/java/bitc/ftp/teamproject/mapper/UserMapper.java	(revision 7e77c72e457c35d5f85d3226aab74a90c7a05e61)
+++ b/src/main/java/bitc/ftp/teamproject/mapper/UserMapper.java	(revision 376c386b7ce6f47322f349381fa8caf59346dd58)
@@ -6,4 +6,5 @@
 @Mapper
 public interface UserMapper {
 	UserVO getUserById(String id);
+	void addRegister(UserVO user);
 }
Index: src/main/java/bitc/ftp/teamproject/service/ProductService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/service/ProductService.java b/src/main/java/bitc/ftp/teamproject/service/ProductService.java
--- a/src/main/java/bitc/ftp/teamproject/service/ProductService.java	(revision 7e77c72e457c35d5f85d3226aab74a90c7a05e61)
+++ b/src/main/java/bitc/ftp/teamproject/service/ProductService.java	(revision 376c386b7ce6f47322f349381fa8caf59346dd58)
@@ -3,11 +3,13 @@
 import bitc.ftp.teamproject.dto.CategoryDTO;
 import bitc.ftp.teamproject.dto.product.*;
 import bitc.ftp.teamproject.mapper.ProductMapper;
+import bitc.ftp.teamproject.util.DateTimeUtil;
 import bitc.ftp.teamproject.vo.CategoryVO;
 import bitc.ftp.teamproject.vo.product.*;
 import lombok.RequiredArgsConstructor;
 import org.springframework.stereotype.Service;
 
+import java.text.ParseException;
 import java.util.ArrayList;
 import java.util.List;
 
@@ -26,6 +28,11 @@
             dto.setName(vo.getName());
             dto.setPrice(vo.getPrice());
             dto.setPhotoName(vo.getPhotoName());
+
+            dto.setCategory1No(vo.getCategory1No());
+            dto.setCategory2No(vo.getCategory2No());
+            dto.setCategory1Name(vo.getCategory1Name());
+            dto.setCategory2Name(vo.getCategory2Name());
             dtoList.add(dto);
         }
 
@@ -94,7 +101,6 @@
         }
         return dtoList;
     }
-
     public void addCartDTO(AddCartDTO addCartDTO) {
         AddCartVO vo = new AddCartVO();
         vo.setProductNo(addCartDTO.getProductNo());
@@ -102,7 +108,6 @@
 
         pMapper.addCart(vo);
     }
-
     public ProductUserDTO getUserVO(int userNo) {
         ProductUserVO productUserVO = pMapper.getUserVO(userNo);
         ProductUserDTO dto = new ProductUserDTO();
@@ -126,7 +131,6 @@
         }
         return dtoList;
     }
-
     public ColorDTO getOneColorVO(int colorNo) {
         ColorVO vo = pMapper.getOneColorVO(colorNo);
 
@@ -135,7 +139,6 @@
         dto.setColorNo(vo.getColorNo());
         return dto;
     }
-
     public SizeDTO getOneSizeVO(int sizeNo) {
         SizeVO vo = pMapper.getOneSizeVO(sizeNo);
 
@@ -144,7 +147,6 @@
         dto.setSizeNo(vo.getSizeNo());
         return dto;
     }
-
     public void buyDTO(BuyDTO buyDTO) {
         BuyVO vo = new BuyVO();
         vo.setProductNo(buyDTO.getProductNo());
@@ -155,5 +157,40 @@
         vo.setSizeNo(buyDTO.getSizeNo());
         pMapper.buyVO(vo);
     }
-
+    public List<QuestionDTO> getQuestionList(int productNo, int userNo) {
+        List<QuestionVO> voList = pMapper.getQuestionList(productNo, userNo);
+        List<QuestionDTO> dtoList = new ArrayList<>();
+        for (QuestionVO vo : voList) {
+            QuestionDTO dto = new QuestionDTO();
+            dto.setQuestionNo(vo.getQuestionNo());
+            dto.setUserNo(vo.getUserNo());
+            dto.setName(vo.getName());
+            dto.setContent(vo.getContent());
+            dto.setProductNo(vo.getProductNo());
+            dto.setUploadDate(DateTimeUtil.convertDateToString(vo.getUploadDate()));
+            dtoList.add(dto);
+        }
+        return dtoList;
+    }
+    public List<AnswerDTO> getAnswerList(int questionNo) {
+        List<AnswerVO> voList = pMapper.getAnswerList(questionNo);
+        List<AnswerDTO> dtoList = new ArrayList<>();
+        for (AnswerVO vo : voList) {
+            AnswerDTO dto = new AnswerDTO();
+            dto.setUserNo(vo.getUserNo());
+            dto.setName(vo.getName());
+            dto.setContent(vo.getContent());
+            dto.setQuestionNo(vo.getQuestionNo());
+            dto.setUploadDate(DateTimeUtil.convertDateToString(vo.getUploadDate()));
+            dtoList.add(dto);
+        }
+        return dtoList;
+    }
+    public void addQuestion(QuestionDTO questionDTO){
+        QuestionVO vo = new QuestionVO();
+        vo.setUserNo(questionDTO.getUserNo());
+        vo.setContent(questionDTO.getContent());
+        vo.setProductNo(questionDTO.getProductNo());
+        pMapper.addQuestion(vo);
+    }
 }
Index: src/main/java/bitc/ftp/teamproject/service/UserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/service/UserService.java b/src/main/java/bitc/ftp/teamproject/service/UserService.java
--- a/src/main/java/bitc/ftp/teamproject/service/UserService.java	(revision 7e77c72e457c35d5f85d3226aab74a90c7a05e61)
+++ b/src/main/java/bitc/ftp/teamproject/service/UserService.java	(revision 376c386b7ce6f47322f349381fa8caf59346dd58)
@@ -4,10 +4,10 @@
 import bitc.ftp.teamproject.mapper.UserMapper;
 import bitc.ftp.teamproject.vo.UserVO;
 import lombok.RequiredArgsConstructor;
-import org.springframework.security.core.authority.AuthorityUtils;
 import org.springframework.security.core.userdetails.UserDetails;
 import org.springframework.security.core.userdetails.UserDetailsService;
 import org.springframework.security.core.userdetails.UsernameNotFoundException;
+import org.springframework.security.crypto.password.PasswordEncoder;
 import org.springframework.stereotype.Service;
 
 import java.util.ArrayList;
@@ -30,7 +30,6 @@
 				new ArrayList<>()
 		);
 	}
-
 	public UserDTO getUserById(String id){
 		UserVO vo =  uMapper.getUserById(id);
 		UserDTO dto = new UserDTO();
@@ -45,4 +44,17 @@
 		dto.setUserGradeNo(vo.getUserGradeNo());
 		return dto;
 	}
+	public void addRegister(UserDTO dto){
+		UserVO vo = new UserVO();
+		vo.setName(dto.getName());
+		vo.setBirth(dto.getBirth());
+		vo.setTel(dto.getTel());
+		vo.setGender(dto.getGender());
+		vo.setEmail(dto.getEmail());
+		vo.setId(dto.getId());
+		vo.setPw(dto.getPw());
+		vo.setRefundAccount(dto.getRefundAccount());
+
+		uMapper.addRegister(vo);
+	}
 }
Index: src/main/java/bitc/ftp/teamproject/util/SecurityConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/util/SecurityConfig.java b/src/main/java/bitc/ftp/teamproject/util/SecurityConfig.java
--- a/src/main/java/bitc/ftp/teamproject/util/SecurityConfig.java	(revision 7e77c72e457c35d5f85d3226aab74a90c7a05e61)
+++ b/src/main/java/bitc/ftp/teamproject/util/SecurityConfig.java	(revision 376c386b7ce6f47322f349381fa8caf59346dd58)
@@ -27,7 +27,7 @@
 				.csrf(AbstractHttpConfigurer::disable)
 				.authorizeHttpRequests(
 						(authz)->authz
-								.requestMatchers("/","/register", "/product/**").permitAll()
+								.requestMatchers("/","/register", "/product/**", "/notice").permitAll()
 								.anyRequest().authenticated()
 				)
 				.formLogin((formLogin) -> formLogin
Index: src/main/java/bitc/ftp/teamproject/vo/product/ProductVO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/vo/product/ProductVO.java b/src/main/java/bitc/ftp/teamproject/vo/product/ProductVO.java
--- a/src/main/java/bitc/ftp/teamproject/vo/product/ProductVO.java	(revision 7e77c72e457c35d5f85d3226aab74a90c7a05e61)
+++ b/src/main/java/bitc/ftp/teamproject/vo/product/ProductVO.java	(revision 376c386b7ce6f47322f349381fa8caf59346dd58)
@@ -13,7 +13,11 @@
     private int productNo;
     private String name;
     private int price;
+
     private int category2No;
+    private int category1No;
+    private String category1Name;
+    private String category2Name;
     private String photoName;
 
 }
Index: src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/src/main/resources/application.properties b/src/main/resources/application.properties
--- a/src/main/resources/application.properties	(revision 7e77c72e457c35d5f85d3226aab74a90c7a05e61)
+++ b/src/main/resources/application.properties	(revision 376c386b7ce6f47322f349381fa8caf59346dd58)
@@ -11,7 +11,7 @@
 spring.thymeleaf.prefix=file:src/main/resources/templates/
 
 #MyBatis ( mapper.xml setting )
-mybatis.mapper-locations=mapper/*.xml
+mybatis.mapper-locations=mapper/**/**.xml
 mybatis.configuration.map-underscore-to-camel-case=true
 mybatis.type-aliases-package=bitc.ftp.teamproject.vo
 logging.level.bitc.ftp.teamproject.mapper=TRACE
\ No newline at end of file
Index: src/main/resources/mapper/ProductMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/mapper/ProductMapper.xml b/src/main/resources/mapper/ProductMapper.xml
--- a/src/main/resources/mapper/ProductMapper.xml	(revision 7e77c72e457c35d5f85d3226aab74a90c7a05e61)
+++ b/src/main/resources/mapper/ProductMapper.xml	(revision 376c386b7ce6f47322f349381fa8caf59346dd58)
@@ -5,9 +5,12 @@
 <mapper namespace="bitc.ftp.teamproject.mapper.ProductMapper">
 
     <select id="getProductList" resultType="ProductVO">
-        select p.productNo, p.name, p.price, ph.photoName
-        from product p, productPhoto ph
-        where p.productNo = ph.productNo and p.category2No = #{category2No}
+        select p.productNo, p.name, p.price, ph.photoName, c1.category1No, c1.name_ko as category1Name, c2.category2No, c2.name_ko as category2Name
+        from product p, productPhoto ph, category1 c1, category2 c2
+        where p.productNo = ph.productNo
+          and p.category2No = c2.category2No
+          and c2.category1No = c1.category1No
+          and p.category2No = #{category2No};
     </select>
 
     <select id="getAllCategory1List" resultType="CategoryVO">
@@ -52,7 +55,7 @@
           and p.productNo = #{productNo}
     </select>
 
-    <select id="getUserVO" resultType="UserVO">
+    <select id="getUserVO" resultType="ProductUserVO">
         select userNo, name, tel, email, refundAccount
         from user
         where userNo = #{userNo};
@@ -73,4 +76,26 @@
         insert into buylist(productNo, userNo, addressListNo, colorNo, sizeNo)
         values (#{productNo}, #{userNo}, #{addressListNo}, #{colorNo}, #{sizeNo})
     </insert>
+
+    <select id="getQuestionList" resultType="QuestionVO">
+        select q.questionNo, u.userNo, u.name, p.productNo, q.content, q.uploadDate
+        from user u, question q, product p
+        where u.userNo = q.userNo
+          and q.productNo = p.productNo
+          and q.productNo = #{productNo}
+          and q.userno = #{userNo};
+    </select>
+
+    <select id="getAnswerList" resultType="AnswerVO">
+        select u.userNo, u.name, a.questionNo, a.content, a.uploadDate
+        from user u, question q, answer a
+        where q.questionNo = a.questionNo
+          and u.userNo = q.userNo
+          and q.questionNo = #{questionNo}
+    </select>
+
+    <insert id="addQuestion" parameterType="QuestionVO">
+        insert into question (userNo, content, productNo)
+        values(#{userNo}, #{content}, #{productNo})
+    </insert>
 </mapper>
\ No newline at end of file
Index: src/main/resources/mapper/user.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/mapper/user.xml b/src/main/resources/mapper/user.xml
--- a/src/main/resources/mapper/user.xml	(revision 7e77c72e457c35d5f85d3226aab74a90c7a05e61)
+++ b/src/main/resources/mapper/user.xml	(revision 376c386b7ce6f47322f349381fa8caf59346dd58)
@@ -9,4 +9,8 @@
         from user
         where user.id = #{id}
     </select>
+    <insert id="addRegister">
+        insert into user(name, birth, tel, gender, email, id, pw, refundAccount, userGradeNo)
+        values (#{name},#{birth}, #{tel}, #{gender}, #{email}, #{id},#{pw}, #{refundAccount}, 2)
+    </insert>
 </mapper>
\ No newline at end of file
Index: src/main/resources/static/js/no_register.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/static/js/no_register.js b/src/main/resources/static/js/no_register.js
--- a/src/main/resources/static/js/no_register.js	(revision 7e77c72e457c35d5f85d3226aab74a90c7a05e61)
+++ b/src/main/resources/static/js/no_register.js	(revision 376c386b7ce6f47322f349381fa8caf59346dd58)
@@ -1,7 +1,5 @@
 // scripts.js
 document.getElementById('signup-form').addEventListener('submit', function(event) {
-    event.preventDefault();
-
     var email = document.getElementById('email').value;
     var password = document.getElementById('registerPassword').value;
     var confirmPassword = document.getElementById('confirm-password').value;
@@ -34,6 +32,4 @@
         return;
     }
 
-    alert('회원가입이 완료되었습니다!');
-    // 실제로는 여기서 서버로 데이터를 보내는 코드를 추가합니다.
 });
\ No newline at end of file
Index: src/main/resources/templates/fragments/fragments.nav.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/templates/fragments/fragments.nav.html b/src/main/resources/templates/fragments/fragments.nav.html
--- a/src/main/resources/templates/fragments/fragments.nav.html	(revision 7e77c72e457c35d5f85d3226aab74a90c7a05e61)
+++ b/src/main/resources/templates/fragments/fragments.nav.html	(revision 376c386b7ce6f47322f349381fa8caf59346dd58)
@@ -5,97 +5,151 @@
 </head>
 <body>
 <th:block th:fragment="nav">
-    <header>
-        <div class="header-container">
-            <div class="header-links">
-                <th:block th:if="${principal == null}">
-                    <a href="#login" style="color: white; margin: 0 10px;" data-bs-toggle="modal"
-                       data-bs-target="#staticBackdrop">로그인</a>
-                </th:block>
-                <th:block th:if="${principal != null}">
-                    <a href="/logout" style="color: white; margin: 0 10px;">로그아웃</a>
-                </th:block>
-                <!-- Modal -->
-                <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false"
-                     tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
-                    <div class="modal-dialog custom-modal">
-                        <div class="modal-content">
-                            <div class="modal-header">
-                                <img src="/images/Main/login_logo.jpg" alt="...">
-                                <h1 class="modal-title fs-5" id="staticBackdropLabel"></h1>
-                                <button type="button" class="btn-close" data-bs-dismiss="modal"
-                                        aria-label="Close"></button>
-                            </div>
-                            <form th:action="@{/login}" method="post">
-                                <div class="modal-body">
-                                    <p>로그인</p>
-                                    <div class="input-group">
-                                        <label for="ID"><i class="bx bx-user"></i></label>
-                                        <input type="text" id="id" name="id" placeholder="아이디를 입력해주세요." required/>
-                                    </div>
-                                    <div class="input-group">
-                                        <label for="password"><i class="bx bx-lock-alt"></i></label>
-                                        <input type="password" id="password" name="pw" placeholder="비밀번호를 입력해주세요." required/>
-                                    </div>
-                                </div>
-                                <div class="modal-footer">
-                                    <button type="submit" class="btn btn-secondary" data-bs-dismiss="modal">로그인</button>
-                                    <button type="button" th:onclick="|location.href='@{/register}'|" class="btn btn-primary">회원가입</button>
-                                </div>
-                            </form>
-                        </div>
-                    </div>
-                </div>
-                <th:block th:if="${principal == null}">
-                    <a href="/register" style="color: white; margin: 0 10px;">회원가입</a>
-                </th:block>
-                <th:block th:if="${principal != null}">
-                    <a href="#mypage" style="color: white; margin: 0 10px;">마이페이지</a>
-                    <a href="#cart" style="color: white; margin: 0 10px;">장바구니</a>
-                </th:block>
-            </div>
-        </div>
-    </header>
-    <nav class="navbar navbar-expand-lg bg-body-tertiary justify-content-around" style="background-color: #042547 !important; ">
-        <a class="navbar-brand text-light mx-auto" href="/"><b>GIANTS SHOP</b></a>
-        <div class="container" style="font-family: Noto Sans KR, sans-serif;">
-            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
-                <span class="navbar-toggler-icon"></span>
-            </button>
-            <div class="collapse navbar-collapse justify-content-between" id="navbarSupportedContent">
-                <ul class="navbar-nav mb-lg-0 d-flex m-0">
-                    <li class="nav-item">
-                        <a class="nav-link active text-light" aria-current="page" href="/">홈</a>
-                    </li>
-                    <th:block th:each="num : ${#numbers.sequence(0, category2List.size()-1, 4)}">
-                        <li class="nav-item dropdown text-white">
-                            <a class="nav-link dropdown-toggle text-light" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false" th:text="${category1List[num/4].name_ko}"></a>
-                            <ul class="dropdown-menu">
-                                <li><a class="dropdown-item" th:href="@{/product/__${category2List[num].categoryNo}__}" th:text="${category2List[num].name_ko}"></a></li>
-                                <li><a class="dropdown-item" th:href="@{/product/__${category2List[num+1].categoryNo}__}" th:text="${category2List[num+1].name_ko}"></a></li>
-                                <li><a class="dropdown-item" th:href="@{/product/__${category2List[num+2].categoryNo}__}" th:text="${category2List[num+2].name_ko}"></a></li>
-                                <li><a class="dropdown-item" th:href="@{/product/__${category2List[num+3].categoryNo}__}" th:text="${category2List[num+3].name_ko}"></a></li>
-                            </ul>
-                        </li>
-                    </th:block>
-                    <li class="nav-item dropdown">
-                        <a class="nav-link dropdown-toggle text-light" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
-                            고객센터
-                        </a>
-                        <ul class="dropdown-menu">
-                            <li><a class="dropdown-item" href="#">공지사항</a></li>
-                            <li><a class="dropdown-item" href="#">문의하기</a></li>
-                            <li><a class="dropdown-item" href="#">FAQ</a></li>
-                        </ul>
-                    </li>
-                </ul>
-                <form class="d-flex" role="search">
-                    <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
-                    <button class="btn btn-outline-light w-50" type="submit">Search</button>
-                </form>
-            </div>
-        </div>
-    </nav>
+    <div style="width:100%;">
+        <header>
+            <div class="header-container">
+                <div class="header-links">
+                    <th:block th:if="${principal == null}">
+                        <a href="#login" id="loginBtn" style="color: white; margin: 0 10px;" data-bs-toggle="modal"
+                           data-bs-target="#staticBackdrop">로그인</a>
+                    </th:block>
+                    <th:block th:if="${principal != null}">
+                        <a href="javascript:goMyPage()" style="color:white; margin:0 10px;" th:text="|${user.name}님 반갑습니다.|"></a>
+                        <a href="/logout" style="color: white; margin: 0 10px;">로그아웃</a>
+                    </th:block>
+                    <!-- Modal -->
+                    <div class="modal fade loginModal" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false"
+                         tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
+                        <div class="modal-dialog custom-modal">
+                            <div class="modal-content">
+                                <div class="modal-header">
+                                    <img src="/images/Main/login_logo.jpg" alt="...">
+                                    <h1 class="modal-title fs-5" id="staticBackdropLabel"></h1>
+                                    <button type="button" class="btn-close" data-bs-dismiss="modal"
+                                            aria-label="Close"></button>
+                                </div>
+                                <form th:action="@{/login}" method="post">
+                                    <div class="modal-body">
+                                        <p>로그인</p>
+                                        <div class="input-group">
+                                            <label for="ID"><i class="bx bx-user"></i></label>
+                                            <input type="text" id="id" name="id" placeholder="아이디를 입력해주세요." required/>
+                                        </div>
+                                        <div class="input-group">
+                                            <label for="password"><i class="bx bx-lock-alt"></i></label>
+                                            <input type="password" id="password" name="pw" placeholder="비밀번호를 입력해주세요."
+                                                   required/>
+                                        </div>
+                                    </div>
+                                    <div class="modal-footer">
+                                        <button type="submit" class="btn btn-secondary" data-bs-dismiss="modal">로그인
+                                        </button>
+                                        <button type="button" th:onclick="|location.href='@{/register}'|"
+                                                class="btn btn-primary">회원가입
+                                        </button>
+                                    </div>
+                                </form>
+                            </div>
+                        </div>
+                    </div>
+                    <th:block th:if="${principal == null}">
+                        <a href="/register" style="color: white; margin: 0 10px;">회원가입</a>
+                    </th:block>
+                    <th:block th:if="${principal != null}">
+                        <th:block th:if="${user.userGradeNo == 1}">
+                            <a href="/admin/products" th:id="${user.userNo}" style="color: white; margin: 0 10px;">관리자페이지</a>
+                        </th:block>
+                        <th:block th:if="${user.userGradeNo == 2}">
+                            <a href="javascript:goMyPage()" class="myPageA" th:id="${user.userNo}"
+                               style="color: white; margin: 0 10px;">마이페이지</a>
+                        </th:block>
+                        <a href="/mypage/cart" style="color: white; margin: 0 10px;">장바구니</a>
+                    </th:block>
+                </div>
+            </div>
+        </header>
+        <nav class="navbar navbar-expand-lg bg-body-tertiary justify-content-around"
+             style="background-color: #042547 !important; ">
+            <a class="navbar-brand text-light mx-auto" href="/"><b>GIANTS SHOP</b></a>
+            <div class="container" style="font-family: Noto Sans KR, sans-serif;">
+                <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
+                        data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent"
+                        aria-expanded="false" aria-label="Toggle navigation">
+                    <span class="navbar-toggler-icon"></span>
+                </button>
+                <div class="collapse navbar-collapse justify-content-between" id="navbarSupportedContent">
+                    <ul class="navbar-nav mb-lg-0 d-flex m-0">
+                        <li class="nav-item">
+                            <a class="nav-link active text-light" aria-current="page" href="/">홈</a>
+                        </li>
+                        <th:block th:each="num : ${#numbers.sequence(0, category2List.size()-1, 4)}">
+                            <li class="nav-item dropdown text-white">
+                                <a class="nav-link dropdown-toggle text-light" href="#" role="button"
+                                   data-bs-toggle="dropdown" aria-expanded="false"
+                                   th:text="${category1List[num/4].name_ko}"></a>
+                                <ul class="dropdown-menu">
+                                    <li><a class="dropdown-item"
+                                           th:href="@{/product/__${category2List[num].categoryNo}__}"
+                                           th:text="${category2List[num].name_ko}"></a></li>
+                                    <li><a class="dropdown-item"
+                                           th:href="@{/product/__${category2List[num+1].categoryNo}__}"
+                                           th:text="${category2List[num+1].name_ko}"></a></li>
+                                    <li><a class="dropdown-item"
+                                           th:href="@{/product/__${category2List[num+2].categoryNo}__}"
+                                           th:text="${category2List[num+2].name_ko}"></a></li>
+                                    <li><a class="dropdown-item"
+                                           th:href="@{/product/__${category2List[num+3].categoryNo}__}"
+                                           th:text="${category2List[num+3].name_ko}"></a></li>
+                                </ul>
+                            </li>
+                        </th:block>
+                        <li class="nav-item dropdown">
+                            <a class="nav-link dropdown-toggle text-light" href="#" role="button"
+                               data-bs-toggle="dropdown" aria-expanded="false">
+                                고객센터
+                            </a>
+                            <ul class="dropdown-menu">
+                                <li><a class="dropdown-item" href="/notice">공지사항</a></li>
+                            </ul>
+                        </li>
+                    </ul>
+                    <form class="d-flex" role="search">
+                        <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
+                        <button class="btn btn-outline-light w-50" type="submit">Search</button>
+                    </form>
+                </div>
+            </div>
+        </nav>
+        <script>
+            function goMyPage() {
+                let f = document.createElement('form');
+
+                let obj;
+                obj = document.createElement('input');
+                obj.setAttribute('type', 'hidden');
+                obj.setAttribute('name', 'userNo');
+                obj.setAttribute('value', $(".myPageA").attr('id'));
+
+                f.appendChild(obj);
+                f.setAttribute('method', 'post');
+                f.setAttribute('action', '/mypage');
+                document.body.appendChild(f);
+                f.submit();
+            }
+
+            $(document).ready(function() {
+
+                $("#loginBtn").click(function() {
+                    $(".loginModal").modal("show");
+                });
+
+                //$("#ipt1").focus();
+                $(".loginModal").on("shown.bs.modal", function () {
+                    $("#id").focus();
+                });
+            });
+        </script>
+    </div>
 </th:block>
 </body>
 </html>
\ No newline at end of file
Index: src/main/resources/templates/fragments/fragments.side.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/templates/fragments/fragments.side.html b/src/main/resources/templates/fragments/fragments.side.html
--- a/src/main/resources/templates/fragments/fragments.side.html	(revision 7e77c72e457c35d5f85d3226aab74a90c7a05e61)
+++ b/src/main/resources/templates/fragments/fragments.side.html	(revision 376c386b7ce6f47322f349381fa8caf59346dd58)
@@ -9,30 +9,36 @@
 <body>
 
 <th:block th:fragment="sideBar">
-    <div class="flex-shrink-0 p-3 sidebar" style="width: 280px;">
-        <ul class="list-unstyled ps-0">
+    <div class="flex-shrink-0 p-3 sidebar text-center" style="width: 15%; height: auto;">
+        <div class="list-unstyled ps-0" id="sidebarAccordion">
             <th:block th:each="num : ${#numbers.sequence(0, category2List.size()-1, 4)}">
-            <li class="mb-1">
-                <button class="btn btn-toggle align-items-center rounded collapsed" data-bs-toggle="collapse"
-                        th:attr="data-bs-target=${'#dashboard-collapse'+num/4}" aria-expanded="false" th:text="${category1List[num/4].name_ko}"></button>
-                <div class="collapse" th:id="|dashboard-collapse${num/4}|" style="">
-                    <ul class="btn-toggle-nav list-unstyled fw-normal pb-1 small ">
-                        <li><a th:href="@{/product/__${category2List[num].categoryNo}__}" class="link-dark rounded" th:text="${category2List[num].name_ko}"></a></li>
-                        <li><a th:href="@{/product/__${category2List[num+1].categoryNo}__}" class="link-dark rounded" th:text="${category2List[num+1].name_ko}"></a></li>
-                        <li><a th:href="@{/product/__${category2List[num+2].categoryNo}__}" class="link-dark rounded" th:text="${category2List[num+2].name_ko}"></a></li>
-                        <li><a th:href="@{/product/__${category2List[num+3].categoryNo}__}" class="link-dark rounded" th:text="${category2List[num+3].name_ko}"></a></li>
+                <button class="btn btn btn-success w-100 mb-3" data-bs-toggle="collapse"
+                        th:attr="data-bs-target=${'#dashboard-collapse'+num/4}" aria-expanded="false"
+                        th:text="${category1List[num/4].name_ko}"></button>
+                <div class="collapse" th:id="|dashboard-collapse${num/4}|" data-bs-parent="#sidebarAccordion">
+                    <ul class="btn-toggle-nav list-unstyled fw-normal pb-1 small">
+                        <li class="mb-2"><a th:href="@{/product/__${category2List[num].categoryNo}__}"
+                                            class="btn btn-light rounded-pill w-100"
+                                            th:text="${category2List[num].name_ko}"></a></li>
+                        <li class="mb-2"><a th:href="@{/product/__${category2List[num+1].categoryNo}__}"
+                                            class="btn btn-light rounded-pill w-100"
+                                            th:text="${category2List[num+1].name_ko}"></a></li>
+                        <li class="mb-2"><a th:href="@{/product/__${category2List[num+2].categoryNo}__}"
+                                            class="btn btn-light rounded-pill w-100"
+                                            th:text="${category2List[num+2].name_ko}"></a></li>
+                        <li class="mb-2"><a th:href="@{/product/__${category2List[num+3].categoryNo}__}"
+                                            class="btn btn-light rounded-pill w-100"
+                                            th:text="${category2List[num+3].name_ko}"></a></li>
                     </ul>
                 </div>
-            </li>
             </th:block>
-        </ul>
+        </div>
     </div>
-
 </th:block>
 
 <script>
     document.querySelectorAll('.collapse .link-dark').forEach(link => {
-        link.addEventListener('click', function() {
+        link.addEventListener('click', function () {
             // 모든 링크에서 'active' 클래스 제거
             document.querySelectorAll('.collapse .link-dark').forEach(link => link.classList.remove('active'));
             // 클릭된 링크에 'active' 클래스 추가
Index: src/main/resources/templates/myPage/myPage.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/templates/myPage/myPage.html b/src/main/resources/templates/myPage/myPage.html
--- a/src/main/resources/templates/myPage/myPage.html	(revision 7e77c72e457c35d5f85d3226aab74a90c7a05e61)
+++ b/src/main/resources/templates/myPage/myPage.html	(revision 376c386b7ce6f47322f349381fa8caf59346dd58)
@@ -16,7 +16,7 @@
                     <div class="card-body">
                         <h5 class="card-title">회원 정보 수정</h5>
                         <p class="card-text">등록되어 있는 회원 정보를 수정합니다.</p>
-                        <a href="/mypage/info" class="btn btn-primary">회원 정보 수정</a>
+                        <a href="/mypage/info" class="btn btn-success">회원 정보 수정</a>
                     </div>
                 </div>
             </div>
@@ -25,7 +25,7 @@
                     <div class="card-body">
                         <h5 class="card-title">배송 주소록 관리</h5>
                         <p class="card-text">등록되어 있는 배송 주소록을 추가 수정 삭제할 수 있습니다.</p>
-                        <a href="/mypage/address" class="btn btn-primary">배송 주소록 관리</a>
+                        <a href="/mypage/address" class="btn btn-success">배송 주소록 관리</a>
                     </div>
                 </div>
             </div>
@@ -36,7 +36,7 @@
                     <div class="card-body">
                         <h5 class="card-title">장바구니</h5>
                         <p class="card-text">등록한 장바구니 목록을 열람 및 삭제할 수 있습니다.</p>
-                        <a href="/mypage/cart" class="btn btn-primary">장바구니</a>
+                        <a href="/mypage/cart" class="btn btn-success">장바구니</a>
                     </div>
                 </div>
             </div>
@@ -45,7 +45,7 @@
                     <div class="card-body">
                         <h5 class="card-title">구매목록</h5>
                         <p class="card-text">지금까지 구매하신 목록의 리스트를 볼 수 있습니다.</p>
-                        <a href="/mypage/buylist" class="btn btn-primary">구매목록</a>
+                        <a href="/mypage/buylist" class="btn btn-success">구매목록</a>
                     </div>
                 </div>
             </div>
@@ -56,7 +56,7 @@
                     <div class="card-body">
                         <h5 class="card-title">문의 목록</h5>
                         <p class="card-text">상품 문의한 것을 모아 볼 수 있습니다.</p>
-                        <a href="/mypage/question" class="btn btn-primary">문의 목록</a>
+                        <a href="/mypage/question" class="btn btn-success">문의 목록</a>
                     </div>
                 </div>
             </div>
Index: src/main/resources/templates/myPage/myPageAddress.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/templates/myPage/myPageAddress.html b/src/main/resources/templates/myPage/myPageAddress.html
--- a/src/main/resources/templates/myPage/myPageAddress.html	(revision 7e77c72e457c35d5f85d3226aab74a90c7a05e61)
+++ b/src/main/resources/templates/myPage/myPageAddress.html	(revision 376c386b7ce6f47322f349381fa8caf59346dd58)
@@ -19,7 +19,7 @@
             <button type="button" class="float-end btn btn-primary mb-2 btn-modal" data-bs-toggle="modal" data-bs-target="#form" data-id="0">
                 등록
             </button>
-            <table class="table table-striped table-bordered">
+            <table class="table table-striped table-bordered table-hover">
                 <thead class="table-dark">
                     <tr>
                         <th scope="col">#</th>
@@ -58,7 +58,7 @@
                 <h1 class="modal-title fs-5" id="staticBackdropLabel">배송지 등록</h1>
                 <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
             </div>
-            <form th:object="${myPageAddressDTO}" th:action="@{/mypage/address/register}" method="post">
+            <form id="addressForm" th:object="${myPageAddressDTO}" th:action="@{/mypage/address/register}" method="post">
                 <div class="modal-body">
                     <input type="hidden" th:field="*{addressListNo}">
                     <label for="addressName" class="mb-3">배송지 이름 입력</label>
@@ -70,7 +70,7 @@
                 </div>
                 <div class="modal-footer">
                     <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">취소</button>
-                    <button type="submit" class="btn btn-primary btn-process">등록</button>
+                    <button type="button" class="btn btn-primary btn-process" id="addBtn">등록</button>
                 </div>
             </form>
         </div>
@@ -98,6 +98,18 @@
         }
 
     });
+
+    $("#addBtn").click(function () {
+        if ($("#addressName").val() == "") {
+            alert("배송지 이름을 입력해주세요.")
+            $('#addressName').focus();
+        } else if($("#address").val() == "") {
+            alert("배송지를 입력해주세요.")
+            $('#address').focus();
+        } else {
+            $("#addressForm").submit()
+        }
+    })
 </script>
 </body>
 </html>
\ No newline at end of file
Index: src/main/resources/templates/myPage/myPageBuyList.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/templates/myPage/myPageBuyList.html b/src/main/resources/templates/myPage/myPageBuyList.html
--- a/src/main/resources/templates/myPage/myPageBuyList.html	(revision 7e77c72e457c35d5f85d3226aab74a90c7a05e61)
+++ b/src/main/resources/templates/myPage/myPageBuyList.html	(revision 376c386b7ce6f47322f349381fa8caf59346dd58)
@@ -12,7 +12,7 @@
     <th:block th:replace="~{fragments/fragment :: myPageSideBar}"></th:block>
     <div class="content w-100 mt-3">
         <div class="content-title text-center">
-            <h1>장바구니</h1>
+            <h1>구매목록</h1>
             <hr/>
         </div>
         <div class="content-body w-75 mx-auto">
@@ -34,7 +34,7 @@
                                 <div class="card-body">
                                     <a class="card-title mb-5 h5 text-decoration-none" th:href="@{/product/detail/__${b.productNo}__}" th:text="${b.productName}"></a>
                                     <div class="d-flex justify-content-between">
-                                        <p class="card-text" th:text="|가  격 : ${b.productPrice}|"></p>
+                                        <p class="card-text" th:text="|가  격 : ${#numbers.formatInteger(b.productPrice, 3, 'COMMA') + '원'}|"></p>
                                         <p class="card-text" th:text="|색  상 : ${b.productColor}|"></p>
                                         <p class="card-text" th:text="|사이즈 : ${b.productSize}|"></p>
                                         <p class="card-text" th:text="|주  소 : ${b.address}|"></p>
Index: src/main/resources/templates/myPage/myPageCart.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/templates/myPage/myPageCart.html b/src/main/resources/templates/myPage/myPageCart.html
--- a/src/main/resources/templates/myPage/myPageCart.html	(revision 7e77c72e457c35d5f85d3226aab74a90c7a05e61)
+++ b/src/main/resources/templates/myPage/myPageCart.html	(revision 376c386b7ce6f47322f349381fa8caf59346dd58)
@@ -16,7 +16,7 @@
             <hr/>
         </div>
         <div class="content-body w-75 mx-auto">
-            <table class="table table-striped table-bordered">
+            <table class="table table-striped table-bordered table-hover">
                 <thead class="table-dark">
                 <tr>
                     <th scope="col">#</th>
@@ -33,8 +33,8 @@
                     <th:block th:each="c, status : ${cartList}">
                         <tr th:attr="id=${c.productNo}">
                             <th class="align-middle" scope="row" th:text="${status.count}"></th>
-                            <td class="align-middle name" th:text="${c.productName}"></td>
-                            <td class="align-middle address" th:text="${c.productPrice}"></td>
+                            <td class="align-middle name" th:text="${c.productName}" th:onclick="|location.href='/product/detail/${c.productNo}'|"></td>
+                            <td class="align-middle address" th:text="${#numbers.formatInteger(c.productPrice, 3, 'COMMA') + '원'}"></td>
                             <td class="align-middle">
                                 <a class="btn btn-danger btn-sm" onclick="return confirm('정말로 삭제할까요?')" th:href="@{/mypage/cart/delete(cartNo=${c.cartNo})}">삭제</a>
                             </td>
Index: src/main/resources/templates/myPage/myPageInfo.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/templates/myPage/myPageInfo.html b/src/main/resources/templates/myPage/myPageInfo.html
--- a/src/main/resources/templates/myPage/myPageInfo.html	(revision 7e77c72e457c35d5f85d3226aab74a90c7a05e61)
+++ b/src/main/resources/templates/myPage/myPageInfo.html	(revision 376c386b7ce6f47322f349381fa8caf59346dd58)
@@ -52,10 +52,36 @@
                 <input type="text" placeholder="환불 계좌 입력" th:field="*{refundAccount}" class="form-control mb-3"/>
                 <span th:if="${#fields.hasErrors('refundAccount')}" th:errors="*{refundAccount}"></span>
 
-                <button type="submit" class="btn btn-primary form-control">수정하기</button>
+                <button type="button" class="btn btn-primary form-control" id="alter">수정하기</button>
             </form>
         </div>
     </div>
 </div>
+<input type="hidden" id="success" th:value="${success}">
+<script>
+
+    if($("#success").val() === "success") alert("회원 정보 수정이 완료되었습니다.");
+
+    $("#alter").click(function () {
+        if ($("#name").val() === "") {
+            alert("이름을 입력해주세요.")
+            $('#name').focus();
+        } else if ($("#birth").val() === "") {
+            alert("생년월일을 입력해주세요.")
+        } else if ($("#tel").val() === "") {
+            alert("전화번호를 입력해주세요.")
+            $('#tel').focus();
+        } else if ($("#email").val() === "") {
+            alert("이메일을 입력해주세요.")
+            $('#email').focus();
+        } else if ($("#refundAccount").val() === "") {
+            alert("환불계좌를 입력해주세요.")
+            $('#refundAccount').focus();
+        } else {
+            $("#registerForm").submit()
+        }
+    })
+</script>
+
 </body>
 </html>
Index: src/main/resources/templates/myPage/myPageQuestion.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/templates/myPage/myPageQuestion.html b/src/main/resources/templates/myPage/myPageQuestion.html
--- a/src/main/resources/templates/myPage/myPageQuestion.html	(revision 7e77c72e457c35d5f85d3226aab74a90c7a05e61)
+++ b/src/main/resources/templates/myPage/myPageQuestion.html	(revision 376c386b7ce6f47322f349381fa8caf59346dd58)
@@ -16,7 +16,7 @@
             <hr/>
         </div>
         <div class="content-body w-75 mx-auto">
-            <table class="table table-striped table-bordered">
+            <table class="table table-striped table-bordered table-hover">
                 <thead class="table-dark">
                 <tr>
                     <th scope="col">#</th>
@@ -28,13 +28,13 @@
                 <tbody class="table-group-divider">
 
                 <th:block th:if="${qDTOList.size() == 0}">
-                    <th colspan="4">등록된 주소 리스트가 없습니다. 등록해 주세요.</th>
+                    <th colspan="4">작성하신 문의가 없습니다.</th>
                 </th:block>
                 <th:block th:if="${qDTOList.size() > 0}">
                     <th:block th:each="q, status : ${qDTOList}">
                         <tr th:attr="id=${q.questionNo}">
                             <th class="align-middle" scope="row" th:text="${status.count}"></th>
-                            <td class="align-middle pName" th:text="${q.productName}"></td>
+                            <td class="align-middle pName" th:text="${q.productName}" th:onclick="|location.href='@{/product/detail/__${q.productNo}__}'|"></td>
                             <td class="align-middle qContent" th:attr="data-id=${q.questionNo}" th:text="${q.getQuestionContent()}"></td>
                             <td class="align-middle">
                                 <button class="btn btn-primary btn-sm btn-modal" data-bs-toggle="modal" data-bs-target="#form" th:attr="data-id=${q.questionNo}">수정</button>
@@ -83,6 +83,10 @@
         $(".modal-body>#questionNo").val(data);
         $(".modal-body>#productName").val($(pName_id).text());
         $(".modal-body>#questionContent").val($(content_id).text());
+        $(".modal-body>#questionContent").prop('readonly', false);
+        $(".modal-body>#questionContent").addClass("form-control");
+        $(".modal-body>#questionContent").removeClass("form-control-plaintext");
+        $(".modal-footer").append("<button type=\"submit\" class=\"btn btn-primary btn-process\">수정</button>");
     });
 
     $(".qContent").click(function(){
@@ -99,7 +103,8 @@
         $(".modal-body>#questionContent").prop('readonly', true);
         $(".modal-body>#questionContent").removeClass("form-control");
         $(".modal-body>#questionContent").addClass("form-control-plaintext");
-    })
+        $(".modal-footer > button.btn-process").remove();
+    });
 
 </script>
 </body>
Index: src/main/resources/templates/nono.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/templates/nono.html b/src/main/resources/templates/nono.html
--- a/src/main/resources/templates/nono.html	(revision 7e77c72e457c35d5f85d3226aab74a90c7a05e61)
+++ b/src/main/resources/templates/nono.html	(revision 376c386b7ce6f47322f349381fa8caf59346dd58)
@@ -179,6 +179,11 @@
 
     </div>
 </footer>
+<input type="hidden" id="success" th:value="${success}">
+<script>
 
+    if($("#success").val() === "success")
+        alert("구매가 완료되었습니다. 마이페이지 > 구매목록에서 확인 가능합니다.");
+</script>
 </body>
 </html>
\ No newline at end of file
Index: src/main/resources/templates/product/payment.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/templates/product/payment.html b/src/main/resources/templates/product/payment.html
--- a/src/main/resources/templates/product/payment.html	(revision 7e77c72e457c35d5f85d3226aab74a90c7a05e61)
+++ b/src/main/resources/templates/product/payment.html	(revision 376c386b7ce6f47322f349381fa8caf59346dd58)
@@ -18,7 +18,7 @@
             src="https://code.jquery.com/jquery-3.7.1.min.js"
             integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo="
             crossorigin="anonymous"></script>
-    <link rel="icon" href="/images/main/ff.png" type="image/x-icon">
+    <link rel="icon" href="/images/Main/ff.png" type="image/x-icon">
 </head>
 <body>
 <th:block th:replace="~{fragments/fragments.nav :: nav}"></th:block>
@@ -30,10 +30,10 @@
             <hr>
         </div>
         <div class="content-body w-75 mx-auto justify-content-center">
-            <form th:action="@{/product/payment/buy}" method="post" th:object="${objectDTO}">
+            <form id="buyProduct" th:action="@{/product/payment/buy}" method="post" th:object="${objectDTO}">
                 <h2 class="ms-5 mb-3">구매 정보</h2>
                 <input type="hidden" th:name="productNo" th:value="${pd.productNo}">
-                <input type="hidden" th:name="userNo" th:value="2">
+                <input type="hidden" th:name="userNo" th:value="${user.userNo}">
                 <input type="hidden" th:name="colorNo" th:value="${colorOneDTO.colorNo}">
                 <input type="hidden" th:name="sizeNo" th:value="${sizeOneDTO.sizeNo}">
                 <table class="table table-bordered text-center">
@@ -45,7 +45,7 @@
                         <td class="col-7 align-middle" th:text="${pd.name}"></td>
                     </tr>
                     <tr>
-                        <td class="align-middle" th:text="${pd.price}"></td>
+                        <td class="align-middle" th:text="${#numbers.formatInteger(pd.price, 3, 'COMMA') + '원'}"></td>
                     </tr>
                     <tr>
                         <td class="align-middle" th:text="${colorOneDTO.colorName}"></td>
@@ -75,13 +75,12 @@
                 </table>
                 <div>
                     <h2 class="d-inline-block ms-5 mb-3">배송지 목록</h2>
-                    <button type="button" class="float-end btn btn-primary">등록</button>
                 </div>
                 <table class="table table-bordered text-center">
                     <tr>
                         <td class="col-3">
                             <select class="address w-100 form-control mt-3" id="eventVal" th:name="addressListNo">
-                                <option value="선택">선택</option>
+                                <option value="선택">배송지 명 ▼</option>
                                 <th:block th:each="a, status : ${addressDTOList}">
                                     <option th:value="${a.addressListNo}" th:utext="${a.addressName}"></option>
                                 </th:block>
@@ -89,7 +88,7 @@
                         </td>
                         <td class="col-7">
                             <select class="address w-100 form-control mt-3 bg-white" id="changeVal" disabled>
-                                <option value="선택">선택</option>
+                                <option value="선택">좌측의 배송지명을 선택하세요.</option>
                                 <th:block th:each="a, status : ${addressDTOList}">
                                     <option th:value="${a.addressListNo}" th:utext="${a.address}"></option>
                                 </th:block>
@@ -98,7 +97,7 @@
                     </tr>
                 </table>
                 <div>
-                    <button type="submit" class="btn btn-primary">결 제 하 기</button>
+                    <button id="buyButton" type="button" class="btn btn-primary">결 제 하 기</button>
                 </div>
             </form>
         </div>
@@ -108,6 +107,14 @@
     $('#eventVal').on('change', function (e) {
         $('#changeVal').val($('#eventVal').val());
     });
+
+    $("#buyButton").click(function () {
+        if ($("#eventVal").val() == "선택") {
+            alert("배송지를 선택하세요.")
+        } else {
+            $("#buyProduct").submit()
+        }
+    })
 </script>
 </body>
 </html>
\ No newline at end of file
Index: src/main/resources/templates/product/product.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/templates/product/product.html b/src/main/resources/templates/product/product.html
--- a/src/main/resources/templates/product/product.html	(revision 7e77c72e457c35d5f85d3226aab74a90c7a05e61)
+++ b/src/main/resources/templates/product/product.html	(revision 376c386b7ce6f47322f349381fa8caf59346dd58)
@@ -2,31 +2,46 @@
 <html lang="en">
 <head>
     <meta charset="UTF-8">
-    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
+    <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
     <meta name="viewport" content="width=device-width, initial-scale=1.0">
     <title>롯데자이언츠 온라인 샵</title>
     <link rel="stylesheet" href="/css/header.css">
     <link rel="preconnect" href="https://fonts.googleapis.com">
     <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
     <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100..900&display=swap" rel="stylesheet">
-    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
-    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
+    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet"
+          integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
+    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
+            integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
+            crossorigin="anonymous"></script>
+    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
     <link rel="icon" href="/images/main/ff.png" type="image/x-icon">
 </head>
 <body>
 <th:block th:replace="~{fragments/fragments.nav :: nav}"></th:block>
-<div class="d-flex justify-content-around">
+<div class="d-flex">
     <th:block th:replace="~{fragments/fragments.side :: sideBar}"></th:block>
-    <div>
-        <div class="mx-auto w-75">
-            <div class="d-flex justify-content-evenly flex-wrap">
+    <div class="d-flex justfy-content-center flex-fill">
+        <div class="d-flex flex-column text-center flex-fill">
+            <div style="width:91%; font-size: 20px; font-weight: bold; color: #333; background-color: #f0f0f0; padding: 5px 10px; border-radius: 5px;">
+                <span style="color: #808080;">[[${pList[0].category1Name}]]</span>
+                &nbsp; >> &nbsp;
+                <span style="color: #000000;">[[${pList[0].category2Name}]]</span>
+            </div>
+            <div class="d-flex flex-wrap w-100">
                 <th:block th:each="p, status :${pList}">
-                    <div class="w-25 border" th:onclick="|location.href='@{/product/detail/__${p.productNo}__}'|">
-                        <div>
-                            <img class="img-fluid" th:src="@{/images}+${p.photoName} + '.jpg'" alt="야구상품사진정보">
+                    <div class="d-flex" style="width:24%;">
+                        <div class="card border-1 m-1" style="height:380px; width: 100%; max-width: 15rem"
+                             th:onclick="|location.href='@{/product/detail/__${p.productNo}__}'|">
+                            <div class="d-flex justify-content-center align-items-center" style="height: 200px;">
+                                <img class="img-fluid" th:src="@{/images}+${p.photoName} + '.jpg'" alt="야구상품사진정보"
+                                     style="object-fit: contain; max-height: 100%;">
+                            </div>
+                            <div class="card-body text-center">
+                                <h5 class="card-title" th:text="${p.name}"></h5>
+                                <p class="card-text" th:text="${#numbers.formatInteger(p.price, 3, 'COMMA') + '원'}"></p>
+                            </div>
                         </div>
-                        <div th:text="${p.name}"></div>
-                        <div th:text="${p.price}"></div>
                     </div>
                 </th:block>
             </div>
Index: src/main/resources/templates/product/productDetail.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/templates/product/productDetail.html b/src/main/resources/templates/product/productDetail.html
--- a/src/main/resources/templates/product/productDetail.html	(revision 7e77c72e457c35d5f85d3226aab74a90c7a05e61)
+++ b/src/main/resources/templates/product/productDetail.html	(revision 376c386b7ce6f47322f349381fa8caf59346dd58)
@@ -1,5 +1,7 @@
 <!DOCTYPE html>
-<html lang="en">
+<html lang="en"
+      xmlns="http://www.w3.org/1999/html"
+      xmlns:th="http://www.thymeleaf.org">
 <head>
     <meta charset="UTF-8">
     <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
@@ -14,60 +16,123 @@
     <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
             integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
             crossorigin="anonymous"></script>
-    <link rel="icon" href="/images/main/ff.png" type="image/x-icon">
+    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
+
+    <link rel="icon" href="/images/Main/ff.png" type="image/x-icon">
 </head>
 <body>
 <th:block th:replace="~{fragments/fragments.nav :: nav}"></th:block>
 <div class="d-flex">
     <th:block th:replace="~{fragments/fragments.side :: sideBar}"></th:block>
-    <div class="border">
-        <div>
-            <img class="" th:src="@{/images}+${pd.photoName} + '.jpg'" alt="야구상품사진정보">
-        </div>
-    </div>
-    <form th:action="@{/product/payment}" method="post" th:object="${objectDTO}">
-        <input type="hidden" th:name="productNo" th:value="${pd.productNo}">
-        <table class="border">
-            <tr>
-                <input type="hidden" th:name="productName" th:value="${pd.name}">
-                <td colspan="2" th:text="${pd.name}"></td>
-            </tr>
-            <tr>
-                <th>가 격</th>
-                <td th:text="${pd.price}"></td>
-            </tr>
-            <tr>
-                <th>사 이 즈</th>
-                <td>
-                    <select class="size" th:name="sizeNo">
-                        <option value="선택"> 선택</option>
-                        <th:block th:each="s, status :${sizeList}">
-                            <option th:value="${s.sizeNo}" th:utext="${s.sizeName}"></option>
-                        </th:block>
-                    </select>
-                </td>
-            </tr>
-            <tr>
-                <th>색 상</th>
-                <td>
-                    <select class="color" th:name="colorNo">
-                        <option value="선택"> 선택</option>
-                        <th:block th:each="c, status :${colorList}">
-                            <option th:value="${c.colorNo}" th:utext="${c.colorName}"></option>
-                        </th:block>
-                    </select>
-                </td>
-            </tr>
-            <tr>
-                <td colspan="2">
-                    <button type="submit">구매하기
-                    </button>
-                    <button type="button" th:onclick="|location.href='@{/product/addcart/__${pd.productNo}__}'|">장바구니
-                    </button>
-                </td>
-            </tr>
-        </table>
-    </form>
+    <div class="container">
+        <div class="row mt-5">
+            <div class="col-md-4 text-center">
+                <img class="img-fluid" th:src="@{/images}+${pd.photoName} + '.jpg'" alt="야구상품사진정보">
+            </div>
+            <div class="col-md-8 mt-5">
+                <form id="buyForm" th:action="@{/product/payment}" method="post" th:object="${objectDTO}">
+                    <th:block th:if="${principal != null}">
+                        <input type="hidden" th:name="userNo" th:value="${user.userNo}">
+                        <input type="hidden" th:name="productNo" th:value="${pd.productNo}">
+                    </th:block>
+                    <table class="table table-bordered" style="width: 50%">
+                        <tr>
+                            <input type="hidden" th:name="productName" th:value="${pd.name}">
+                            <td colspan="2" th:text="${pd.name}"></td>
+                        </tr>
+                        <tr>
+                            <th>가 격</th>
+                            <td th:text="${#numbers.formatInteger(pd.price, 3, 'COMMA') + '원'}"></td>
+                        </tr>
+                        <tr>
+                            <th>사 이 즈</th>
+                            <td>
+                                <select class="form-select" id="selectSize" th:name="sizeNo">
+                                    <option value="선택"> 선택</option>
+                                    <th:block th:each="s, status :${sizeList}">
+                                        <option th:value="${s.sizeNo}" th:utext="${s.sizeName}"></option>
+                                    </th:block>
+                                </select>
+                            </td>
+                        </tr>
+                        <tr>
+                            <th>색 상</th>
+                            <td>
+                                <select class="form-select" id="selectColor" th:name="colorNo">
+                                    <option value="선택"> 선택</option>
+                                    <th:block th:each="c, status :${colorList}">
+                                        <option th:value="${c.colorNo}" th:utext="${c.colorName}"></option>
+                                    </th:block>
+                                </select>
+                            </td>
+                        </tr>
+                        <tr>
+                            <td colspan="2" class="text-center">
+                                <th:block th:if="${principal == null}">
+                                    <Button type="button" class="btn btn-dark" data-bs-toggle="modal"
+                                            data-bs-target="#staticBackdrop">구매하기
+                                    </Button>
+                                    <Button type="button" class="btn btn-secondary" data-bs-toggle="modal"
+                                            data-bs-target="#staticBackdrop">장바구니
+                                    </Button>
+                                </th:block>
+
+                                <th:block th:if="${principal != null}">
+                                    <button class="btn btn-dark" id="buy" type="button">구매하기</button>
+                                    <button class="btn btn-secondary" id="addCart" type="button"
+                                            th:onclick="|location.href='@{/product/addcart/__${pd.productNo}__}'|">장바구니
+                                    </button>
+                                </th:block>
+                            </td>
+                        </tr>
+                    </table>
+                </form>
+            </div>
+        </div>
+        <th:block th:if="${principal != null}">
+            <form th:action="@{/product/detail/__${productNo}__/questionAdd}" method="post" style="width: 70%" class="mt-5">
+                <label for="questionContent">문의</label>
+                <div class="d-flex form-group">
+                    <textarea class="form-control col-9" id="questionContent" name="content" rows="2" required></textarea>
+                    <button type="submit" class="btn btn-dark col-1">등록</button>
+                </div>
+            </form>
+        </th:block>
+        <div class="accordion mt-5" id="accordion" style="width:70%">
+            <th:block th:each="q, status : ${questionList}">
+                <div class="accordion-item">
+                    <h2 class="accordion-header">
+                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
+                                th:attr="data-bs-target='#collapse'+${status.count}"
+                                aria-expanded="false" th:attrappend="aria-controls='collapseOne'+${status.count}"
+                                th:text="${q.content}">
+                        </button>
+                    </h2>
+                    <th:block th:each="a, aStatus : ${answerListList[status.index]}">
+                        <div th:attr="id='collapse'+${status.count}" class="accordion-collapse collapse"
+                             data-bs-parent="#accordion">
+                            <div class="accordion-body" th:text="|답변 : ${a.content}|"></div>
+                        </div>
+                    </th:block>
+                </div>
+            </th:block>
+        </div>
+    </div>
+</div>
 </div>
 </body>
+<script>
+
+    $("#buy").click(function(){
+        if($("#selectColor").val() == "선택" || $("#selectSize").val() == "선택") {
+            if($("#selectColor").val() == "선택" && $("#selectSize").val() == "선택") alert("색상과 사이즈를 선택하세요.");
+            else if($("#selectColor").val() == "선택") alert("색상을 선택하세요.");
+            else if($("#selectSize").val() == "선택") alert("사이즈을 선택하세요.");
+
+        } else {
+            $("#buyForm").submit();
+        }
+    });
+
+</script>
 </html>
\ No newline at end of file
Index: src/main/resources/templates/register.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/templates/register.html b/src/main/resources/templates/register.html
--- a/src/main/resources/templates/register.html	(revision 7e77c72e457c35d5f85d3226aab74a90c7a05e61)
+++ b/src/main/resources/templates/register.html	(revision 376c386b7ce6f47322f349381fa8caf59346dd58)
@@ -1,12 +1,11 @@
 <!DOCTYPE html>
-<html lang="ko">
+<html lang="ko"
+      xmlns:th="http://www.thymeleaf.org">
 <head>
     <th:block th:replace="~{fragments/fragment :: config}"></th:block>
     <title>회원가입</title>
 </head>
 
-
-
 <style>
     body {
         font-family: "Noto Sans KR", sans-serif;
@@ -54,7 +53,7 @@
         width: 100%;
         padding: 5px;
         border: 1px solid #ccc;
-        border-radius: 0px;
+        border-radius: 0;
         box-sizing: border-box;
     }
 
@@ -73,7 +72,7 @@
         background-color: rgb(209, 17, 51);
         color: white;
         border: none;
-        border-radius: 0px;
+        border-radius: 0;
         font-size: 16px;
         cursor: pointer;
     }
@@ -97,30 +96,28 @@
     }
 </style>
 
-
-
 <body>
 <th:block th:replace="~{fragments/fragments.nav :: nav}"></th:block>
 
 <div class="win">
-    <img src="/images/main/winwin.jpg">
+    <img src="/images/Main/winwin.jpg" alt="회원가입 로고 사진">
 </div>
 
 <div class="signup-box">
     <h2>회원가입</h2>
-    <form id="signup-form">
+    <form th:object="${user}" id="signup-form" th:action="@{/register}" method="post">
         <div class="textbox">
             <label for="username">성명</label>
-            <input type="text" id="username" name="username" required>
+            <input type="text" id="username" name="name" required>
         </div>
         <div class="textbox">
-            <label for="email">아이디</label>
+            <label for="registerId">아이디</label>
             <input type="text" id="registerId" name="id" required>
             <span id="id-error" class="error"></span>
         </div>
         <div class="textbox">
-            <label for="password">비밀번호</label>
-            <input type="password" id="registerPassword" name="password" required>
+            <label for="registerPassword">비밀번호</label>
+            <input type="password" id="registerPassword" name="pw" required>
         </div>
         <div class="textbox">
             <label for="confirm-password">비밀번호 확인</label>
@@ -129,31 +126,31 @@
         </div>
         <div class="textbox">
             <label for="email">이메일 주소</label>
-            <input type="" id="email" name="email" required>
+            <input type="email" id="email" name="email" required>
             <span id="email-error" class="error"></span>
         </div>
 
         <div class="textbox">
-            <label for="phone">전화번호</label>
-            <input type="tel" id="phone" name="phone" required>
+            <label for="tel">전화번호</label>
+            <input type="tel" id="tel" name="tel" required>
         </div>
 
         <div class="gender-box">
             <label>성별</label>
-            <input type="radio" id="male" name="gender" value="male" required>
+            <input type="radio" id="male" name="gender" value="1" required>
             <label for="male">남성</label>
-            <input type="radio" id="female" name="gender" value="female">
+            <input type="radio" id="female" name="gender" value="2">
             <label for="female">여성</label>
         </div>
 
         <div class="textbox">
             <label for="birthdate">생년월일</label>
-            <input type="date" id="birthdate" name="birthdate" required>
+            <input type="date" id="birthdate" name="birth" required>
         </div>
 
         <div class="textbox">
-            <label for="phone">계좌번호(환불계좌)</label>
-            <input type="tel" id="tel" name="tel" required>
+            <label for="refundAccount">계좌번호(환불계좌)</label>
+            <input type="tel" id="refundAccount" name="refundAccount" required>
         </div>
 
         <div class="checkbox">
Index: src/main/java/bitc/ftp/teamproject/controller/admin/AdminAnswerController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/controller/admin/AdminAnswerController.java b/src/main/java/bitc/ftp/teamproject/controller/admin/AdminAnswerController.java
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/java/bitc/ftp/teamproject/controller/admin/AdminAnswerController.java	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,23 @@
+package bitc.ftp.teamproject.controller.admin;
+
+
+import bitc.ftp.teamproject.dto.admin.AdminAnswerDTO;
+import bitc.ftp.teamproject.service.admin.AdminAnswerService;
+import lombok.AllArgsConstructor;
+import org.springframework.http.ResponseEntity;
+import org.springframework.stereotype.Controller;
+import org.springframework.web.bind.annotation.*;
+
+@AllArgsConstructor
+@Controller
+@RequestMapping("/admin/answers")
+public class AdminAnswerController {
+
+  private final AdminAnswerService adminAnswerService;
+
+  @PostMapping
+  public ResponseEntity<String> saveAnswer(@RequestBody AdminAnswerDTO adminAnswerDTO) {
+    adminAnswerService.saveAnswer(adminAnswerDTO);
+    return ResponseEntity.ok("Answer 가 성공적으로 저장되었습니다");
+  }
+}
Index: src/main/java/bitc/ftp/teamproject/controller/admin/AdminNoticeController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/controller/admin/AdminNoticeController.java b/src/main/java/bitc/ftp/teamproject/controller/admin/AdminNoticeController.java
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/java/bitc/ftp/teamproject/controller/admin/AdminNoticeController.java	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,77 @@
+package bitc.ftp.teamproject.controller.admin;
+
+import bitc.ftp.teamproject.dto.UserDTO;
+import bitc.ftp.teamproject.dto.admin.AdminNoticeDTO;
+import bitc.ftp.teamproject.service.UserService;
+import bitc.ftp.teamproject.service.admin.AdminNoticeService;
+
+import lombok.AllArgsConstructor;
+import org.springframework.security.core.userdetails.User;
+import org.springframework.stereotype.Controller;
+import org.springframework.ui.Model;
+import org.springframework.web.bind.annotation.*;
+
+import java.security.Principal;
+import java.util.List;
+
+@AllArgsConstructor
+@Controller
+@RequestMapping("/admin/notices")
+public class AdminNoticeController {
+  private final AdminNoticeService adminNoticeService;
+  private final UserService userService;
+
+  @GetMapping("/{noticeNo}")
+  public String getNotices(@PathVariable int noticeNo, Model model) {
+    List<AdminNoticeDTO> noticeList = adminNoticeService.getAllNotices(noticeNo);
+    model.addAttribute("noticeList", noticeList);
+    return "admin/notices";
+  }
+
+  @GetMapping("/details/{noticeNo}")
+  public String getNoticeDetails(@PathVariable int noticeNo, Model model) {
+    AdminNoticeDTO notice = adminNoticeService.getNoticeById(noticeNo);
+    model.addAttribute("notice", notice);
+    return "admin/noticeDetails";
+  }
+
+  @GetMapping("/new")
+  public String createNoticeForm(Model model,Principal principal) {
+    String username = principal.getName();
+    UserDTO user = userService.getUserById(username);
+
+    model.addAttribute("notice", new AdminNoticeDTO());
+    model.addAttribute("userNo", user.getUserNo());
+    model.addAttribute("name", user.getName());
+    return "admin/createNotice";
+  }
+
+  @PostMapping("/new")
+  public String createNotice(@ModelAttribute AdminNoticeDTO notice,Principal principal) {
+
+    String username = principal.getName();
+    UserDTO user = userService.getUserById(username);
+    notice.setUserNo(user.getUserNo());
+
+    adminNoticeService.createNotice(notice);
+    return "redirect:/admin/notices/1";
+  }
+
+  @GetMapping("/search")
+  public String searchNotices(@RequestParam("keyword") String keyword, Model model) {
+    List<AdminNoticeDTO> noticeList = adminNoticeService.searchNotices(keyword);
+    model.addAttribute("noticeList", noticeList);
+    return "admin/notices";
+  }
+
+  @PostMapping("/edit")
+  public String editNotice(@ModelAttribute AdminNoticeDTO notice) {
+    adminNoticeService.updateNotice(notice);
+    return "redirect:/admin/notices/details/" + notice.getNoticeNo();
+  }
+  @PostMapping("/delete")
+  public String deleteProduct(@RequestParam int noticeNo) {
+    adminNoticeService.deleteNotice(noticeNo);
+    return "redirect:/admin/products";
+  }
+}
Index: src/main/java/bitc/ftp/teamproject/controller/admin/AdminProductController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/controller/admin/AdminProductController.java b/src/main/java/bitc/ftp/teamproject/controller/admin/AdminProductController.java
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/java/bitc/ftp/teamproject/controller/admin/AdminProductController.java	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,209 @@
+package bitc.ftp.teamproject.controller.admin;
+
+
+import bitc.ftp.teamproject.dto.CategoryDTO;
+import bitc.ftp.teamproject.dto.admin.AdminCategoryDTO;
+import bitc.ftp.teamproject.dto.admin.AdminProductDTO;
+import bitc.ftp.teamproject.service.ProductService;
+import bitc.ftp.teamproject.service.admin.AdminProductService;
+import lombok.AllArgsConstructor;
+import org.springframework.stereotype.Controller;
+import org.springframework.ui.Model;
+import org.springframework.web.bind.annotation.*;
+import org.springframework.web.multipart.MultipartFile;
+
+import java.io.File;
+import java.io.IOException;
+import java.nio.file.Files;
+import java.nio.file.Path;
+import java.nio.file.Paths;
+import java.util.List;
+import java.util.UUID;
+
+@AllArgsConstructor
+@Controller
+@RequestMapping("/admin/products")
+public class AdminProductController {
+  private AdminProductService adminProductService;
+  private ProductService pService;
+
+  public void categoryTest(Model model){
+    List<CategoryDTO> c1DTO = pService.getAllCategory1();
+    List<CategoryDTO> c2DTO = pService.getAllCategory2();
+    model.addAttribute("category1List", c1DTO);
+    model.addAttribute("category2List", c2DTO);
+  }
+
+  //메인화면_제품 목록 조회
+  @GetMapping
+  public String showProducts( Model model) {
+    List<AdminProductDTO> productList = adminProductService.getAllProduct();
+    List<AdminCategoryDTO> category1List = adminProductService.getCategory1List();
+    int currentPage = 1; // 현재 페이지 값을 설정
+    int totalPages = 10; // 전체 페이지 수를 설정
+
+    model.addAttribute("category1List", category1List);
+    model.addAttribute("productList", productList);
+    model.addAttribute("currentPage", currentPage);
+    model.addAttribute("totalPages", totalPages);
+
+    return "admin/products";
+  }
+
+  // 상품 등록 페이지로 이동
+  @GetMapping("/add")
+  public String addProductPage(Model model) {
+    model.addAttribute("product", new AdminProductDTO());
+
+    List<CategoryDTO> c1DTO = pService.getAllCategory1();
+    List<CategoryDTO> c2DTO = pService.getAllCategory2();
+    model.addAttribute("category1List", c1DTO);
+    model.addAttribute("category2List", c2DTO);
+
+    return "admin/addProduct";
+  }
+
+  // 상품 등록 처리
+  @PostMapping("/add")
+  public String addProduct(@RequestParam String productName,
+                           @RequestParam int price,
+                           @RequestParam int category2No,
+                           @RequestParam(value = "photo", required = false) MultipartFile photo) {
+    AdminProductDTO adminProductDTO = new AdminProductDTO();
+    adminProductDTO.setProductName(productName);
+    adminProductDTO.setPrice(price);
+    adminProductDTO.setCategory2No(category2No);
+
+    if (photo != null && !photo.isEmpty()) {
+      String category1Name = adminProductService.getCategory1Name(category2No);
+      String category2Name = adminProductService.getCategory2Name(category2No);
+
+      String originalFilename = photo.getOriginalFilename();
+      String photoNameWithoutExtension = UUID.randomUUID().toString();
+      String extension = originalFilename.substring(originalFilename.lastIndexOf("."));
+      String photoPath = "/" + category1Name + "/" + category2Name + "/" + photoNameWithoutExtension;
+      String uploadDir = System.getProperty("user.dir") + "/src/main/resources/static/images" + photoPath + extension;
+
+      adminProductDTO.setPhotoName(photoPath);
+      File uploadDirFile = new File(uploadDir).getParentFile();
+      if (!uploadDirFile.exists()) {
+        uploadDirFile.mkdirs();
+      }
+      File file = new File(uploadDir);
+      try {
+        photo.transferTo(file);
+        System.out.println("File saved at: " + file.getAbsolutePath());
+      } catch (IOException e) {
+        e.printStackTrace();
+        System.out.println("Error saving file: " + e.getMessage());
+      }
+    }
+
+    adminProductService.addProduct(adminProductDTO);
+    return "redirect:/admin/products";
+  }
+
+
+
+  // 제품 수정 폼을 보여주는 메소드
+  @GetMapping("/edit/{productNo}")
+  public String editProduct(@PathVariable int productNo, Model model) {
+    AdminProductDTO product = adminProductService.getProductById(productNo);
+    String imageUrl = "/images" + product.getPhotoName() + ".jpg";
+    List<AdminProductDTO> productList = adminProductService.getAllProduct();
+    model.addAttribute("product", product);
+    model.addAttribute("imageUrl", imageUrl);
+    model.addAttribute("category2List", productList);
+
+    List<CategoryDTO> c1DTO = pService.getAllCategory1();
+    List<CategoryDTO> c2DTO = pService.getAllCategory2();
+    model.addAttribute("category1List", c1DTO);
+    model.addAttribute("category2List", c2DTO);
+
+    return "admin/editProduct";
+  }
+
+  @PostMapping("/update")
+  public String updateProduct(@RequestParam int productNo,
+                              @RequestParam String productName,
+                              @RequestParam int price,
+                              @RequestParam int category2No,
+                              @RequestParam(value = "photo", required = false) MultipartFile photo) {
+    AdminProductDTO adminProductDTO = new AdminProductDTO();
+    adminProductDTO.setProductNo(productNo);
+    adminProductDTO.setProductName(productName);
+    adminProductDTO.setPrice(price);
+    adminProductDTO.setCategory2No(category2No);
+
+    if (photo != null && !photo.isEmpty()) {
+      AdminProductDTO product = adminProductService.getProductById(productNo);
+      String uploadDir = System.getProperty("user.dir") + "/src/main/resources/static/images";
+      Path oldImagePath = Paths.get(uploadDir + product.getPhotoName() + ".jpg");
+      System.out.println("oldIamgePath : "+oldImagePath+".jpg");
+      try{
+        Files.delete(oldImagePath);
+      }catch(Exception e){
+        System.out.println("Error : " + e.getMessage());
+      }
+
+      String category1Name = adminProductService.getCategory1Name(category2No);
+      String category2Name = adminProductService.getCategory2Name(category2No);
+
+      String storFileName = photo.getOriginalFilename();
+      String photoNameWithoutExtension = UUID.randomUUID().toString();
+      String photoPath = "/" + category1Name + "/" + category2Name + "/" + photoNameWithoutExtension;
+      String extension = storFileName.substring(storFileName.lastIndexOf("."));
+      adminProductDTO.setPhotoName(photoPath);
+      File uploadDirFile = new File(uploadDir+photoPath + extension).getParentFile();
+      if (!uploadDirFile.exists()) {
+        uploadDirFile.mkdirs();
+      }
+      File file = new File(uploadDir+photoPath+extension);
+      try {
+        photo.transferTo(file);
+        System.out.println("File saved at: " + file.getAbsolutePath());
+      } catch (IOException e) {
+        e.printStackTrace();
+        System.out.println("Error saving file: " + e.getMessage());
+      }
+    }
+
+    adminProductService.updateProduct(adminProductDTO);
+    return "redirect:/admin/products";
+  }
+
+
+  @GetMapping("/search")
+  public String searchProducts(@RequestParam("keyword") String keyword,
+                               @RequestParam(value = "category", required = false) String category,
+                               Model model) {
+    System.out.println("----------------" + keyword +"//"+category);
+    List<AdminCategoryDTO> category1List = adminProductService.getCategory1List();
+    List<AdminProductDTO> productList;
+    if (category != null && !category.isEmpty()) {
+      productList = adminProductService.searchProductsByCategory(keyword, category);
+    } else {
+      productList = adminProductService.searchProducts(keyword);
+    }
+    model.addAttribute("category1List", category1List);
+    model.addAttribute("productList", productList);
+    return "admin/products";
+  }
+
+  @PostMapping("/delete")
+  public String deleteProduct(@RequestParam int productNo) {
+
+    AdminProductDTO product = adminProductService.getProductById(productNo);
+    String uploadDir = System.getProperty("user.dir") + "/src/main/resources/static/images";
+    Path oldImagePath = Paths.get(uploadDir + product.getPhotoName() + ".jpg");
+    System.out.println("oldIamgePath : "+oldImagePath+".jpg");
+    try{
+      Files.delete(oldImagePath);
+    }catch(Exception e){
+      System.out.println("Error : " + e.getMessage());
+    }
+
+    adminProductService.deleteProduct(productNo);
+    return "redirect:/admin/products";
+  }
+}
Index: src/main/java/bitc/ftp/teamproject/controller/admin/AdminQuestionController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/controller/admin/AdminQuestionController.java b/src/main/java/bitc/ftp/teamproject/controller/admin/AdminQuestionController.java
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/java/bitc/ftp/teamproject/controller/admin/AdminQuestionController.java	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,35 @@
+package bitc.ftp.teamproject.controller.admin;
+
+import bitc.ftp.teamproject.dto.admin.AdminQuestionDTO;
+import bitc.ftp.teamproject.service.admin.AdminAnswerService;
+import bitc.ftp.teamproject.service.admin.AdminQuestionService;
+import lombok.AllArgsConstructor;
+import org.springframework.stereotype.Controller;
+import org.springframework.ui.Model;
+import org.springframework.web.bind.annotation.*;
+
+import java.util.List;
+
+
+@AllArgsConstructor
+@Controller
+@RequestMapping("/admin/questions")
+public class AdminQuestionController {
+
+  private final AdminQuestionService adminQuestionService;
+  private final AdminAnswerService adminAnswerService;
+
+  //  메인화면을 만들어야 temp를 사용
+  @GetMapping
+  public String questionMain(){
+    return "admin/questions";
+  }
+
+  @GetMapping("/{questionNo}")
+  public String getQuestion(@PathVariable int questionNo, Model model) {
+    List<AdminQuestionDTO> questionList = adminQuestionService.getAllQuestions(questionNo);
+    model.addAttribute("questionList", questionList);
+    return "admin/questions";
+  }
+
+}
Index: src/main/java/bitc/ftp/teamproject/controller/admin/AdminUserController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/controller/admin/AdminUserController.java b/src/main/java/bitc/ftp/teamproject/controller/admin/AdminUserController.java
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/java/bitc/ftp/teamproject/controller/admin/AdminUserController.java	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,47 @@
+package bitc.ftp.teamproject.controller.admin;
+
+
+
+import bitc.ftp.teamproject.dto.admin.AdminUserDTO;
+import bitc.ftp.teamproject.service.admin.AdminUserService;
+import lombok.AllArgsConstructor;
+import org.springframework.http.ResponseEntity;
+import org.springframework.stereotype.Controller;
+import org.springframework.ui.Model;
+import org.springframework.web.bind.annotation.*;
+
+import java.util.List;
+
+@AllArgsConstructor
+@Controller
+@RequestMapping("/admin/users")
+public class AdminUserController {
+  private AdminUserService adminUserService;
+
+  @GetMapping("/{userNo}")
+  public String getUsers(@PathVariable int userNo, Model model) {
+    List<AdminUserDTO> userList = adminUserService.getAllUsers(userNo);
+    model.addAttribute("userList", userList);
+    return "admin/users";
+  }
+
+  @GetMapping("/details/{userNo}")
+  @ResponseBody
+  public AdminUserDTO getUserDetails(@PathVariable int userNo) {
+    return adminUserService.getUserDetails(userNo);
+  }
+
+  @DeleteMapping("/delete/{userNo}")
+  @ResponseBody
+  public ResponseEntity<Void> deleteUser(@PathVariable int userNo) {
+    adminUserService.deleteUser(userNo);
+    return ResponseEntity.ok().build();
+  }
+
+  @GetMapping("/search")
+  public String searchUsers(@RequestParam String keyword, Model model) {
+    List<AdminUserDTO> userList = adminUserService.searchUsers(keyword);
+    model.addAttribute("userList", userList);
+    return "admin/users";
+  }
+}
Index: src/main/java/bitc/ftp/teamproject/dto/admin/AdminAnswerDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/dto/admin/AdminAnswerDTO.java b/src/main/java/bitc/ftp/teamproject/dto/admin/AdminAnswerDTO.java
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/java/bitc/ftp/teamproject/dto/admin/AdminAnswerDTO.java	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,19 @@
+package bitc.ftp.teamproject.dto.admin;
+
+import lombok.*;
+
+import java.util.Date;
+
+@AllArgsConstructor
+@NoArgsConstructor
+@Getter
+@Setter
+@ToString
+public class AdminAnswerDTO {
+
+    private int answerNo;
+    private int questionNo;
+    private String content;
+    private Date uploadDate;
+    private int userNo;
+}
Index: src/main/java/bitc/ftp/teamproject/dto/admin/AdminCategoryDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/dto/admin/AdminCategoryDTO.java b/src/main/java/bitc/ftp/teamproject/dto/admin/AdminCategoryDTO.java
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/java/bitc/ftp/teamproject/dto/admin/AdminCategoryDTO.java	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,16 @@
+package bitc.ftp.teamproject.dto.admin;
+
+
+import lombok.AllArgsConstructor;
+import lombok.Getter;
+import lombok.NoArgsConstructor;
+import lombok.Setter;
+
+@Getter
+@Setter
+@AllArgsConstructor
+@NoArgsConstructor
+public class AdminCategoryDTO {
+  String name;
+  String nameKo;
+}
Index: src/main/java/bitc/ftp/teamproject/dto/admin/AdminNoticeDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/dto/admin/AdminNoticeDTO.java b/src/main/java/bitc/ftp/teamproject/dto/admin/AdminNoticeDTO.java
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/java/bitc/ftp/teamproject/dto/admin/AdminNoticeDTO.java	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,24 @@
+package bitc.ftp.teamproject.dto.admin;
+
+import lombok.*;
+import org.springframework.format.annotation.DateTimeFormat;
+import java.util.Date;
+
+@AllArgsConstructor
+@NoArgsConstructor
+@Getter
+@Setter
+@ToString
+public class AdminNoticeDTO {
+    private int noticeNo;
+    private String content;
+    @DateTimeFormat(pattern = "yyyy-MM-dd")
+    private Date startDate;
+    @DateTimeFormat(pattern = "yyyy-MM-dd")
+    private Date endDate;
+    private Date uploadDate;
+    private String title;
+    private int userNo;
+    private String name;
+
+}
Index: src/main/java/bitc/ftp/teamproject/dto/admin/AdminProductDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/dto/admin/AdminProductDTO.java b/src/main/java/bitc/ftp/teamproject/dto/admin/AdminProductDTO.java
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/java/bitc/ftp/teamproject/dto/admin/AdminProductDTO.java	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,31 @@
+package bitc.ftp.teamproject.dto.admin;
+
+import lombok.*;
+
+@AllArgsConstructor
+@NoArgsConstructor
+@Getter
+@Setter
+@ToString
+public class AdminProductDTO {
+
+
+  private int photoNo;
+  private String photoName;
+
+  private int productNo;
+  private String productName;
+  private int price;
+  private int category2No;
+
+  private String category2Name;
+  private int category1No;
+  private String category2Name_ko;
+
+  private String category1Name;
+  private String category1Name_ko;
+
+  private int colorNo;
+  private String colorName;
+
+}
Index: src/main/java/bitc/ftp/teamproject/dto/admin/AdminQuestionDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/dto/admin/AdminQuestionDTO.java b/src/main/java/bitc/ftp/teamproject/dto/admin/AdminQuestionDTO.java
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/java/bitc/ftp/teamproject/dto/admin/AdminQuestionDTO.java	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,25 @@
+package bitc.ftp.teamproject.dto.admin;
+
+import lombok.*;
+
+import java.util.Date;
+
+@AllArgsConstructor
+@NoArgsConstructor
+@Getter
+@Setter
+@ToString
+public class AdminQuestionDTO {
+
+    private int questionNo;
+    private int userNo;
+    private String content;
+    private Date uploadDate;
+    private int productNo;
+    private String userName;
+    private String productName;
+
+    private boolean hasAnswer; // 답변 상태 설정
+    private String answerContent; // 답변 내용 추가
+
+}
Index: src/main/java/bitc/ftp/teamproject/dto/admin/AdminUserDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/dto/admin/AdminUserDTO.java b/src/main/java/bitc/ftp/teamproject/dto/admin/AdminUserDTO.java
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/java/bitc/ftp/teamproject/dto/admin/AdminUserDTO.java	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,24 @@
+package bitc.ftp.teamproject.dto.admin;
+
+import lombok.*;
+
+@AllArgsConstructor
+@NoArgsConstructor
+@Getter
+@Setter
+@ToString
+public class AdminUserDTO {
+
+    private int userNo;
+    private String name;
+    private String birth;
+    private String tel;
+    private int gender;
+    private String email;
+    private String id;
+    private String pw;
+    private String refundAccount;
+    private int userGradeNo;
+    private String grade;
+
+}
Index: src/main/java/bitc/ftp/teamproject/dto/product/AnswerDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/dto/product/AnswerDTO.java b/src/main/java/bitc/ftp/teamproject/dto/product/AnswerDTO.java
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/java/bitc/ftp/teamproject/dto/product/AnswerDTO.java	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,18 @@
+package bitc.ftp.teamproject.dto.product;
+
+import lombok.*;
+
+import java.util.Date;
+
+@Getter
+@Setter
+@AllArgsConstructor
+@NoArgsConstructor
+@ToString
+public class AnswerDTO {
+	int userNo;
+	String name;
+	int questionNo;
+	String content;
+	String uploadDate;
+}
\ No newline at end of file
Index: src/main/java/bitc/ftp/teamproject/dto/product/QuestionDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/dto/product/QuestionDTO.java b/src/main/java/bitc/ftp/teamproject/dto/product/QuestionDTO.java
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/java/bitc/ftp/teamproject/dto/product/QuestionDTO.java	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,20 @@
+package bitc.ftp.teamproject.dto.product;
+
+import lombok.*;
+
+import java.util.Date;
+
+@Getter
+@Setter
+@AllArgsConstructor
+@NoArgsConstructor
+@ToString
+public class QuestionDTO {
+	int questionNo;
+	int userNo;
+	String name;
+	int productNo;
+	String content;
+	String uploadDate;
+}
+
Index: src/main/java/bitc/ftp/teamproject/mapper/admin/AdminAnswerMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/mapper/admin/AdminAnswerMapper.java b/src/main/java/bitc/ftp/teamproject/mapper/admin/AdminAnswerMapper.java
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/java/bitc/ftp/teamproject/mapper/admin/AdminAnswerMapper.java	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,17 @@
+package bitc.ftp.teamproject.mapper.admin;
+
+
+import bitc.ftp.teamproject.vo.admin.AdminAnswerVO;
+import org.apache.ibatis.annotations.Mapper;
+import org.apache.ibatis.annotations.Select;
+
+@Mapper
+public interface AdminAnswerMapper {
+  void insertAnswer(AdminAnswerVO adminAnswerVO);
+
+  @Select("SELECT COUNT(*) FROM answer WHERE questionNo = #{questionNo}")
+  int countAnswersByQuestionNo(int questionNo);
+
+  @Select("SELECT content FROM answer WHERE questionNo = #{questionNo} ORDER BY uploadDate DESC LIMIT 1")
+  String findLatestAnswerContentByQuestionNo(int questionNo); // 질문 번호로 가장 최근 답변 내용 조회
+}
Index: src/main/java/bitc/ftp/teamproject/mapper/admin/AdminNoticeMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/mapper/admin/AdminNoticeMapper.java b/src/main/java/bitc/ftp/teamproject/mapper/admin/AdminNoticeMapper.java
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/java/bitc/ftp/teamproject/mapper/admin/AdminNoticeMapper.java	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,17 @@
+package bitc.ftp.teamproject.mapper.admin;
+
+import bitc.ftp.teamproject.vo.admin.AdminNoticeVO;
+import org.apache.ibatis.annotations.Mapper;
+import org.apache.ibatis.annotations.Param;
+
+import java.util.List;
+
+@Mapper
+public interface AdminNoticeMapper {
+  List<AdminNoticeVO> getNoticeList(int noticeNo);
+  AdminNoticeVO getNoticeById(int noticeNo);
+  void insertNotice(AdminNoticeVO notice);
+  List<AdminNoticeVO> searchNotices(String keyword);
+  void updateNotice(AdminNoticeVO notice);
+  void deleteNotice(@Param("noticeNo") int noticeNo);
+}
Index: src/main/java/bitc/ftp/teamproject/mapper/admin/AdminProductMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/mapper/admin/AdminProductMapper.java b/src/main/java/bitc/ftp/teamproject/mapper/admin/AdminProductMapper.java
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/java/bitc/ftp/teamproject/mapper/admin/AdminProductMapper.java	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,34 @@
+package bitc.ftp.teamproject.mapper.admin;
+
+
+import bitc.ftp.teamproject.dto.CategoryDTO;
+import bitc.ftp.teamproject.vo.admin.AdminCategoryVO;
+import bitc.ftp.teamproject.vo.admin.AdminProductPhotoVO;
+import bitc.ftp.teamproject.vo.admin.AdminProductVO;
+import org.apache.ibatis.annotations.Mapper;
+import org.apache.ibatis.annotations.Param;
+
+import java.util.List;
+
+@Mapper
+public interface AdminProductMapper {
+  List<AdminProductVO> getProductList();
+  List<AdminProductVO> searchProducts(String keyword);
+  List<AdminProductVO> searchProductsByCategory(String keyword, String category);
+  List<AdminCategoryVO> getCategory1List();
+
+  AdminProductVO getProductById(int productNo);
+  void insertProduct(AdminProductVO adminProductVO);
+
+  void insertProductPhoto(AdminProductPhotoVO adminProductPhotoVO);
+
+  void updateProduct(AdminProductVO adminProductVO);
+  void updateProductPhoto(AdminProductPhotoVO adminProductPhotoVO);
+
+  void deleteProduct(@Param("productNo") int productNo);
+
+  void deleteProductPhotosByProductNo(int productNo);
+
+  String findCategory1NameByCategory2No(int category2No);
+  String findCategory2NameByCategory2No(int category2No);
+}
Index: src/main/java/bitc/ftp/teamproject/mapper/admin/AdminQuestionMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/mapper/admin/AdminQuestionMapper.java b/src/main/java/bitc/ftp/teamproject/mapper/admin/AdminQuestionMapper.java
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/java/bitc/ftp/teamproject/mapper/admin/AdminQuestionMapper.java	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,13 @@
+package bitc.ftp.teamproject.mapper.admin;
+
+
+import bitc.ftp.teamproject.vo.admin.AdminQuestionVO;
+import org.apache.ibatis.annotations.Mapper;
+
+import java.util.List;
+
+
+@Mapper
+public interface AdminQuestionMapper {
+    List<AdminQuestionVO> getQuestionList();
+}
Index: src/main/java/bitc/ftp/teamproject/mapper/admin/AdminUserMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/mapper/admin/AdminUserMapper.java b/src/main/java/bitc/ftp/teamproject/mapper/admin/AdminUserMapper.java
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/java/bitc/ftp/teamproject/mapper/admin/AdminUserMapper.java	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,16 @@
+package bitc.ftp.teamproject.mapper.admin;
+
+
+import bitc.ftp.teamproject.vo.admin.AdminUserVO;
+import org.apache.ibatis.annotations.Mapper;
+
+import java.util.List;
+
+@Mapper
+public interface AdminUserMapper {
+  List<AdminUserVO> getUserList(int userNo);
+  void deleteUser(int userNo);
+  AdminUserVO getUserDetails(int userNo);
+  List<AdminUserVO> searchUsers(String keyword);
+}
+
Index: src/main/java/bitc/ftp/teamproject/service/admin/AdminAnswerService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/service/admin/AdminAnswerService.java b/src/main/java/bitc/ftp/teamproject/service/admin/AdminAnswerService.java
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/java/bitc/ftp/teamproject/service/admin/AdminAnswerService.java	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,30 @@
+package bitc.ftp.teamproject.service.admin;
+
+import bitc.ftp.teamproject.dto.admin.AdminAnswerDTO;
+import bitc.ftp.teamproject.mapper.admin.AdminAnswerMapper;
+import bitc.ftp.teamproject.vo.admin.AdminAnswerVO;
+import lombok.AllArgsConstructor;
+import org.springframework.stereotype.Service;
+
+@AllArgsConstructor
+@Service
+public class AdminAnswerService {
+
+  private final AdminAnswerMapper adminAnswerMapper;
+
+  public void saveAnswer(AdminAnswerDTO adminAnswerDTO) {
+    if (adminAnswerDTO == null) {
+      throw new IllegalArgumentException("AdminAnswerDTO 는 null 값은 안됩니다");
+    }
+    AdminAnswerVO adminAnswerVO = new AdminAnswerVO();
+
+    adminAnswerVO.setAnswerNo(adminAnswerDTO.getAnswerNo());
+    adminAnswerVO.setQuestionNo(adminAnswerDTO.getQuestionNo());
+    adminAnswerVO.setContent(adminAnswerDTO.getContent());
+    adminAnswerVO.setUploadDate(adminAnswerDTO.getUploadDate());
+    adminAnswerVO.setUserNo(adminAnswerDTO.getUserNo());
+
+    adminAnswerMapper.insertAnswer(adminAnswerVO);
+  }
+}
+
Index: src/main/java/bitc/ftp/teamproject/service/admin/AdminNoticeService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/service/admin/AdminNoticeService.java b/src/main/java/bitc/ftp/teamproject/service/admin/AdminNoticeService.java
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/java/bitc/ftp/teamproject/service/admin/AdminNoticeService.java	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,63 @@
+package bitc.ftp.teamproject.service.admin;
+
+
+import bitc.ftp.teamproject.dto.admin.AdminNoticeDTO;
+import bitc.ftp.teamproject.mapper.admin.AdminNoticeMapper;
+import bitc.ftp.teamproject.vo.admin.AdminNoticeVO;
+import lombok.AllArgsConstructor;
+import org.springframework.stereotype.Service;
+import java.util.ArrayList;
+import java.util.Date;
+import java.util.List;
+
+@AllArgsConstructor
+@Service
+public class AdminNoticeService {
+  private final AdminNoticeMapper adminNoticeMapper;
+
+  private AdminNoticeDTO convertToDTO(AdminNoticeVO vo) {
+    return new AdminNoticeDTO(vo.getNoticeNo(), vo.getContent(), vo.getStartDate(), vo.getEndDate(), vo.getUploadDate(), vo.getTitle(), vo.getUserNo(), vo.getName());
+  }
+
+  private AdminNoticeVO convertToVO(AdminNoticeDTO dto) {
+    return new AdminNoticeVO(dto.getNoticeNo(), dto.getContent(), dto.getStartDate(), dto.getEndDate(), dto.getUploadDate(), dto.getTitle(), dto.getUserNo(), dto.getName());
+  }
+
+  public List<AdminNoticeDTO> getAllNotices(int noticeNo) {
+    List<AdminNoticeVO> voList = adminNoticeMapper.getNoticeList(noticeNo);
+    List<AdminNoticeDTO> dtoList = new ArrayList<>();
+    for (AdminNoticeVO vo : voList) {
+      dtoList.add(convertToDTO(vo));
+    }
+    return dtoList;
+  }
+
+  public AdminNoticeDTO getNoticeById(int noticeNo) {
+    AdminNoticeVO vo = adminNoticeMapper.getNoticeById(noticeNo);
+    return convertToDTO(vo);
+  }
+
+  public void createNotice(AdminNoticeDTO notice) {
+    AdminNoticeVO vo = convertToVO(notice);
+    adminNoticeMapper.insertNotice(vo);
+  }
+
+  public List<AdminNoticeDTO> searchNotices(String keyword) {
+    List<AdminNoticeVO> voList = adminNoticeMapper.searchNotices(keyword);
+    List<AdminNoticeDTO> dtoList = new ArrayList<>();
+    for (AdminNoticeVO vo : voList) {
+      dtoList.add(convertToDTO(vo));
+    }
+    return dtoList;
+  }
+
+  public void updateNotice(AdminNoticeDTO notice) {
+    notice.setUploadDate(new Date());
+    AdminNoticeVO vo = convertToVO(notice);
+    adminNoticeMapper.updateNotice(vo);
+  }
+
+  public void deleteNotice(int noticeNo) {
+    adminNoticeMapper.deleteNotice(noticeNo);
+  }
+}
Index: src/main/java/bitc/ftp/teamproject/service/admin/AdminProductService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/service/admin/AdminProductService.java b/src/main/java/bitc/ftp/teamproject/service/admin/AdminProductService.java
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/java/bitc/ftp/teamproject/service/admin/AdminProductService.java	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,167 @@
+package bitc.ftp.teamproject.service.admin;
+
+
+
+import bitc.ftp.teamproject.dto.CategoryDTO;
+import bitc.ftp.teamproject.dto.admin.AdminCategoryDTO;
+import bitc.ftp.teamproject.dto.admin.AdminProductDTO;
+import bitc.ftp.teamproject.mapper.ProductMapper;
+import bitc.ftp.teamproject.mapper.admin.AdminProductMapper;
+import bitc.ftp.teamproject.vo.admin.AdminCategoryVO;
+import bitc.ftp.teamproject.vo.admin.AdminProductPhotoVO;
+import bitc.ftp.teamproject.vo.admin.AdminProductVO;
+import lombok.AllArgsConstructor;
+import org.springframework.stereotype.Service;
+
+import java.io.File;
+import java.util.*;
+
+@AllArgsConstructor
+@Service
+public class AdminProductService {
+  private final AdminProductMapper adminProductMapper;
+  private final ProductMapper productMapper;
+
+  //메인화면 모든 리스트 나열
+  public List<AdminProductDTO> getAllProduct() {
+    List<AdminProductVO> voList = adminProductMapper.getProductList();
+    List<AdminProductDTO> dtoList = new ArrayList<>();
+    for (AdminProductVO vo : voList) {
+      AdminProductDTO dto = convertToDTO(vo);
+      dtoList.add(dto);
+    }
+    return dtoList;
+  }
+
+  // 상품 등록 메소드 추가
+  public void addProduct(AdminProductDTO adminProductDTO) {
+    AdminProductVO adminProductVO = convertToVO(adminProductDTO);
+    adminProductMapper.insertProduct(adminProductVO);
+
+    int productNo = adminProductVO.getProductNo();
+
+    if (adminProductDTO.getPhotoName() != null) {
+      AdminProductPhotoVO photoVO = new AdminProductPhotoVO();
+      photoVO.setPhotoName(adminProductDTO.getPhotoName());
+      photoVO.setProductNo(productNo); // 생성된 productNo를 설정합니다.
+      adminProductMapper.insertProductPhoto(photoVO);
+    }
+  }
+  public String getCategory1Name(int category2No) {
+    return adminProductMapper.findCategory1NameByCategory2No(category2No);
+  }
+
+  public String getCategory2Name(int category2No) {
+    return adminProductMapper.findCategory2NameByCategory2No(category2No);
+  }
+
+
+  // ID로 제품 정보 가져오기
+  public AdminProductDTO getProductById(int productNo) {
+    AdminProductVO adminProductVO = adminProductMapper.getProductById(productNo);
+    return convertToDTO(adminProductVO);
+  }
+
+  public List<AdminProductDTO> searchProducts(String keyword) {
+    List<AdminProductVO> voList = adminProductMapper.searchProducts(keyword);
+    List<AdminProductDTO> dtoList = new ArrayList<>();
+    for (AdminProductVO vo : voList) {
+      AdminProductDTO dto = convertToDTO(vo);
+      dtoList.add(dto);
+    }
+    return dtoList;
+  }
+
+  public List<AdminProductDTO> searchProductsByCategory(String keyword, String category) {
+    List<AdminProductVO> voList = adminProductMapper.searchProductsByCategory(keyword, category);
+    List<AdminProductDTO> dtoList = new ArrayList<>();
+    for (AdminProductVO vo : voList) {
+      AdminProductDTO dto = convertToDTO(vo);
+      dtoList.add(dto);
+    }
+    return dtoList;
+  }
+
+  public List<AdminCategoryDTO> getCategory1List(){
+    List<AdminCategoryVO> voList = adminProductMapper.getCategory1List();
+    List<AdminCategoryDTO> dtoList = new ArrayList<>();
+    for (AdminCategoryVO vo : voList) {
+      AdminCategoryDTO dto = new AdminCategoryDTO();
+      dto.setName(vo.getName());
+      dto.setNameKo(vo.getNameKo());
+      dtoList.add(dto);
+    }
+    return dtoList;
+  }
+  public void updateProduct(AdminProductDTO adminProductDTO) {
+    // ProductDTO를 ProductVO로 변환하여 업데이트
+    AdminProductVO adminProductVO = convertToVO(adminProductDTO);
+    adminProductMapper.updateProduct(adminProductVO);
+
+    int productNo = adminProductVO.getProductNo();
+    if(adminProductDTO.getPhotoName() != null) {
+      AdminProductPhotoVO photoVO = new AdminProductPhotoVO();
+      photoVO.setPhotoName(adminProductDTO.getPhotoName());
+      photoVO.setProductNo(productNo);
+      adminProductMapper.updateProductPhoto(photoVO);
+    }
+  }
+
+  public void deleteProduct(int productNo) {
+    // 해당 제품의 사진 정보를 먼저 가져옵니다.
+    AdminProductVO product = adminProductMapper.getProductById(productNo);
+    String photoName = product.getPhotoName();
+    String category1Name = getCategory1Name(product.getCategory2No());
+    String category2Name = getCategory2Name(product.getCategory2No());
+
+    adminProductMapper.deleteProductPhotosByProductNo(productNo);
+    adminProductMapper.deleteProduct(productNo);
+
+    // 사진 파일을 삭제합니다.
+    if (photoName != null) {
+      String uploadDir = System.getProperty("user.dir") + "/src/main/resources/static/images/" + category1Name + "/" + category2Name + "/";
+      File file = new File(uploadDir + photoName);
+      if (file.exists()) {
+        file.delete();
+        System.out.println("File deleted: " + file.getAbsolutePath());
+      } else {
+        System.out.println("File not found: " + file.getAbsolutePath());
+      }
+    }
+  }
+
+  private AdminProductVO convertToVO(AdminProductDTO dto) {
+    AdminProductVO vo = new AdminProductVO();
+    vo.setPhotoNo(dto.getPhotoNo());
+    vo.setPhotoName(dto.getPhotoName());
+    vo.setProductNo(dto.getProductNo());
+    vo.setProductName(dto.getProductName());
+    vo.setPrice(dto.getPrice());
+    vo.setCategory2No(dto.getCategory2No());
+    vo.setCategory2Name(dto.getCategory2Name());
+    vo.setCategory1No(dto.getCategory1No());
+    vo.setCategory2NameKo(dto.getCategory2Name_ko());
+    vo.setCategory1Name(dto.getCategory1Name());
+    vo.setCategory1NameKo(dto.getCategory1Name_ko());
+    return vo;
+  }
+
+  // VO를 DTO로 변환하는 메소드
+  private AdminProductDTO convertToDTO(AdminProductVO vo) {
+    AdminProductDTO dto = new AdminProductDTO();
+    dto.setPhotoNo(vo.getPhotoNo());
+    dto.setPhotoName(vo.getPhotoName());
+    dto.setProductNo(vo.getProductNo());
+    dto.setProductName(vo.getProductName());
+    dto.setPrice(vo.getPrice());
+    dto.setCategory2No(vo.getCategory2No());
+    dto.setCategory2Name(vo.getCategory2Name());
+    dto.setCategory1No(vo.getCategory1No());
+    dto.setCategory2Name_ko(vo.getCategory2NameKo());
+    dto.setCategory1Name(vo.getCategory1Name());
+    dto.setCategory1Name_ko(vo.getCategory1NameKo());
+    return dto;
+  }
+}
+
+
Index: src/main/java/bitc/ftp/teamproject/service/admin/AdminQuestionService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/service/admin/AdminQuestionService.java b/src/main/java/bitc/ftp/teamproject/service/admin/AdminQuestionService.java
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/java/bitc/ftp/teamproject/service/admin/AdminQuestionService.java	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,47 @@
+package bitc.ftp.teamproject.service.admin;
+
+
+import bitc.ftp.teamproject.dto.admin.AdminQuestionDTO;
+import bitc.ftp.teamproject.mapper.admin.AdminAnswerMapper;
+import bitc.ftp.teamproject.mapper.admin.AdminQuestionMapper;
+import bitc.ftp.teamproject.vo.admin.AdminQuestionVO;
+import lombok.AllArgsConstructor;
+import org.springframework.stereotype.Service;
+
+import java.util.ArrayList;
+import java.util.List;
+
+@AllArgsConstructor
+@Service
+public class AdminQuestionService {
+  private final AdminQuestionMapper adminQuestionMapper;
+  private final AdminAnswerMapper adminAnswerMapper;
+
+  //모든 질문목록을 반환
+  public List<AdminQuestionDTO> getAllQuestions(int questionId) {
+    List<AdminQuestionVO> voList = adminQuestionMapper.getQuestionList();
+    //확인용 sout
+    for(AdminQuestionVO vo : voList){
+      System.out.println(vo);
+    }
+
+    List<AdminQuestionDTO> dtoList = new ArrayList<>();
+    for (AdminQuestionVO vo : voList) {
+      AdminQuestionDTO dto = new AdminQuestionDTO();
+
+      dto.setQuestionNo(vo.getQuestionNo());
+      dto.setUserNo(vo.getUserNo());
+      dto.setContent(vo.getContent());
+      dto.setUploadDate(vo.getUploadDate());
+      dto.setProductNo(vo.getProductNo());
+      dto.setUserName(vo.getUserName());
+      dto.setProductName(vo.getProductName());
+
+      dto.setHasAnswer(adminAnswerMapper.countAnswersByQuestionNo(vo.getQuestionNo()) > 0); // 답변 상태 설정
+      dto.setAnswerContent(adminAnswerMapper.findLatestAnswerContentByQuestionNo(vo.getQuestionNo())); // 최신 답변 내용 설정
+
+      dtoList.add(dto);
+    }
+    return dtoList;
+  }
+}
Index: src/main/java/bitc/ftp/teamproject/service/admin/AdminUserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/service/admin/AdminUserService.java b/src/main/java/bitc/ftp/teamproject/service/admin/AdminUserService.java
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/java/bitc/ftp/teamproject/service/admin/AdminUserService.java	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,61 @@
+package bitc.ftp.teamproject.service.admin;
+
+
+import bitc.ftp.teamproject.dto.admin.AdminUserDTO;
+import bitc.ftp.teamproject.mapper.admin.AdminUserMapper;
+import bitc.ftp.teamproject.vo.admin.AdminUserVO;
+import lombok.AllArgsConstructor;
+import org.springframework.stereotype.Service;
+
+import java.util.ArrayList;
+import java.util.List;
+
+@Service
+@AllArgsConstructor
+public class AdminUserService {
+  private final AdminUserMapper adminUserMapper;
+
+  public List<AdminUserDTO> getAllUsers(int userNo) {
+    List<AdminUserVO> voList = adminUserMapper.getUserList(userNo);
+    return convertToDTOList(voList);
+  }
+
+  public AdminUserDTO getUserDetails(int userNo) {
+    AdminUserVO vo = adminUserMapper.getUserDetails(userNo);
+    return convertToDTO(vo);
+  }
+
+  public void deleteUser(int userNo) {
+    adminUserMapper.deleteUser(userNo);
+  }
+
+  public List<AdminUserDTO> searchUsers(String keyword) {
+    List<AdminUserVO> voList = adminUserMapper.searchUsers(keyword);
+    return convertToDTOList(voList);
+  }
+
+  private List<AdminUserDTO> convertToDTOList(List<AdminUserVO> voList) {
+    List<AdminUserDTO> dtoList = new ArrayList<>();
+    for (AdminUserVO vo : voList) {
+      dtoList.add(convertToDTO(vo));
+    }
+    return dtoList;
+  }
+
+  private AdminUserDTO convertToDTO(AdminUserVO vo) {
+    if (vo == null) return null;
+    AdminUserDTO dto = new AdminUserDTO();
+    dto.setUserNo(vo.getUserNo());
+    dto.setName(vo.getName());
+    dto.setBirth(vo.getBirth());
+    dto.setTel(vo.getTel());
+    dto.setGender(vo.getGender());
+    dto.setEmail(vo.getEmail());
+    dto.setId(vo.getId());
+    dto.setPw(vo.getPw());
+    dto.setRefundAccount(vo.getRefundAccount());
+    dto.setUserGradeNo(vo.getUserGradeNo());
+    dto.setGrade(vo.getGrade());
+    return dto;
+  }
+}
Index: src/main/java/bitc/ftp/teamproject/vo/admin/AdminAnswerVO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/vo/admin/AdminAnswerVO.java b/src/main/java/bitc/ftp/teamproject/vo/admin/AdminAnswerVO.java
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/java/bitc/ftp/teamproject/vo/admin/AdminAnswerVO.java	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,19 @@
+package bitc.ftp.teamproject.vo.admin;
+
+import lombok.*;
+
+import java.util.Date;
+
+@AllArgsConstructor
+@NoArgsConstructor
+@Getter
+@Setter
+@ToString
+public class AdminAnswerVO {
+
+  private int answerNo;
+  private int questionNo;
+  private String content;
+  private Date uploadDate;
+  private int userNo;
+}
Index: src/main/java/bitc/ftp/teamproject/vo/admin/AdminCategoryVO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/vo/admin/AdminCategoryVO.java b/src/main/java/bitc/ftp/teamproject/vo/admin/AdminCategoryVO.java
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/java/bitc/ftp/teamproject/vo/admin/AdminCategoryVO.java	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,15 @@
+package bitc.ftp.teamproject.vo.admin;
+
+import lombok.AllArgsConstructor;
+import lombok.Getter;
+import lombok.NoArgsConstructor;
+import lombok.Setter;
+
+@Getter
+@Setter
+@AllArgsConstructor
+@NoArgsConstructor
+public class AdminCategoryVO {
+  String name;
+  String nameKo;
+}
Index: src/main/java/bitc/ftp/teamproject/vo/admin/AdminNoticeVO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/vo/admin/AdminNoticeVO.java b/src/main/java/bitc/ftp/teamproject/vo/admin/AdminNoticeVO.java
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/java/bitc/ftp/teamproject/vo/admin/AdminNoticeVO.java	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,20 @@
+package bitc.ftp.teamproject.vo.admin;
+
+import lombok.*;
+import java.util.Date;
+
+@AllArgsConstructor
+@NoArgsConstructor
+@Getter
+@Setter
+@ToString
+public class AdminNoticeVO {
+    private int noticeNo;
+    private String content;
+    private Date startDate;
+    private Date endDate;
+    private Date uploadDate;
+    private String title;
+    private int userNo;
+    private String name;
+}
Index: src/main/java/bitc/ftp/teamproject/vo/admin/AdminProductPhotoVO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/vo/admin/AdminProductPhotoVO.java b/src/main/java/bitc/ftp/teamproject/vo/admin/AdminProductPhotoVO.java
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/java/bitc/ftp/teamproject/vo/admin/AdminProductPhotoVO.java	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,15 @@
+package bitc.ftp.teamproject.vo.admin;
+
+
+import lombok.*;
+
+@AllArgsConstructor
+@NoArgsConstructor
+@Getter
+@Setter
+@ToString
+public class AdminProductPhotoVO {
+    private int photoNo;
+    private String photoName;
+    private int productNo;
+}
Index: src/main/java/bitc/ftp/teamproject/vo/admin/AdminProductVO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/vo/admin/AdminProductVO.java b/src/main/java/bitc/ftp/teamproject/vo/admin/AdminProductVO.java
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/java/bitc/ftp/teamproject/vo/admin/AdminProductVO.java	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,29 @@
+package bitc.ftp.teamproject.vo.admin;
+
+import lombok.*;
+
+@AllArgsConstructor
+@NoArgsConstructor
+@Getter
+@Setter
+@ToString
+public class AdminProductVO {
+  private int photoNo;
+  private String photoName;
+
+  private int productNo;
+  private String productName;
+  private int price;
+
+  private int category2No;
+  private String category2Name;
+  private String category2NameKo;
+
+  private int category1No;
+  private String category1Name;
+  private String category1NameKo;
+
+//  private int colorNo;
+//  private String colorName;
+
+}
Index: src/main/java/bitc/ftp/teamproject/vo/admin/AdminQuestionVO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/vo/admin/AdminQuestionVO.java b/src/main/java/bitc/ftp/teamproject/vo/admin/AdminQuestionVO.java
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/java/bitc/ftp/teamproject/vo/admin/AdminQuestionVO.java	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,22 @@
+package bitc.ftp.teamproject.vo.admin;
+
+import lombok.*;
+
+import java.util.Date;
+
+@AllArgsConstructor
+@NoArgsConstructor
+@Getter
+@Setter
+@ToString
+public class AdminQuestionVO {
+
+  private int questionNo;
+  private int userNo;
+  private String content;
+  private Date uploadDate;
+  private int productNo;
+  private String userName;
+  private String productName;
+
+}
Index: src/main/java/bitc/ftp/teamproject/vo/admin/AdminUserVO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/vo/admin/AdminUserVO.java b/src/main/java/bitc/ftp/teamproject/vo/admin/AdminUserVO.java
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/java/bitc/ftp/teamproject/vo/admin/AdminUserVO.java	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,24 @@
+package bitc.ftp.teamproject.vo.admin;
+
+import lombok.*;
+
+@AllArgsConstructor
+@NoArgsConstructor
+@Getter
+@Setter
+@ToString
+public class AdminUserVO {
+
+    private int userNo;
+    private String name;
+    private String birth;
+    private String tel;
+    private int gender;
+    private String email;
+    private String id;
+    private String pw;
+    private String refundAccount;
+    private int userGradeNo;
+    private String grade;
+
+}
Index: src/main/java/bitc/ftp/teamproject/vo/product/AnswerVO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/vo/product/AnswerVO.java b/src/main/java/bitc/ftp/teamproject/vo/product/AnswerVO.java
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/java/bitc/ftp/teamproject/vo/product/AnswerVO.java	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,20 @@
+package bitc.ftp.teamproject.vo.product;
+
+import lombok.AllArgsConstructor;
+import lombok.Getter;
+import lombok.NoArgsConstructor;
+import lombok.Setter;
+
+import java.util.Date;
+
+@Getter
+@Setter
+@AllArgsConstructor
+@NoArgsConstructor
+public class AnswerVO {
+	int userNo;
+	String name;
+	int questionNo;
+	String content;
+	Date uploadDate;
+}
Index: src/main/java/bitc/ftp/teamproject/vo/product/QuestionVO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bitc/ftp/teamproject/vo/product/QuestionVO.java b/src/main/java/bitc/ftp/teamproject/vo/product/QuestionVO.java
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/java/bitc/ftp/teamproject/vo/product/QuestionVO.java	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,21 @@
+package bitc.ftp.teamproject.vo.product;
+
+import lombok.AllArgsConstructor;
+import lombok.Getter;
+import lombok.NoArgsConstructor;
+import lombok.Setter;
+
+import java.util.Date;
+
+@Getter
+@Setter
+@AllArgsConstructor
+@NoArgsConstructor
+public class QuestionVO {
+	int questionNo;
+	int userNo;
+	String name;
+	int productNo;
+	String content;
+	Date uploadDate;
+}
\ No newline at end of file
Index: src/main/resources/mapper/admin/AnswerMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/mapper/admin/AnswerMapper.xml b/src/main/resources/mapper/admin/AnswerMapper.xml
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/resources/mapper/admin/AnswerMapper.xml	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper
+        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
+        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="bitc.ftp.teamproject.mapper.admin.AdminAnswerMapper">
+
+    <insert id="insertAnswer" parameterType="bitc.ftp.teamproject.vo.admin.AdminAnswerVO">
+        INSERT INTO answer (answerNo, questionNo, content, uploadDate, userNo)
+        VALUES (#{answerNo}, #{questionNo}, #{content}, NOW(), #{userNo})
+    </insert>
+
+</mapper>
+
Index: src/main/resources/mapper/admin/NoticeMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/mapper/admin/NoticeMapper.xml b/src/main/resources/mapper/admin/NoticeMapper.xml
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/resources/mapper/admin/NoticeMapper.xml	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,70 @@
+<!DOCTYPE mapper
+        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
+        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="bitc.ftp.teamproject.mapper.admin.AdminNoticeMapper">
+
+    <select id="getNoticeList" resultType="bitc.ftp.teamproject.vo.admin.AdminNoticeVO">
+        SELECT
+            n.noticeNo AS noticeNo,
+            n.content AS content,
+            n.startDate AS startDate,
+            n.endDate AS endDate,
+            n.uploadDate AS uploadDate,
+            n.title AS title,
+            u.userNo AS userNo,
+            u.name AS name
+        FROM
+            notice n
+                LEFT JOIN user u ON n.userNo = u.userNo
+    </select>
+
+    <select id="getNoticeById" resultType="bitc.ftp.teamproject.vo.admin.AdminNoticeVO">
+        SELECT
+            n.noticeNo AS noticeNo,
+            n.content AS content,
+            n.startDate AS startDate,
+            n.endDate AS endDate,
+            n.uploadDate AS uploadDate,
+            n.title AS title,
+            u.userNo AS userNo,
+            u.name AS name
+        FROM
+            notice n
+                LEFT JOIN user u ON n.userNo = u.userNo
+        WHERE
+            n.noticeNo = #{noticeNo}
+    </select>
+
+    <insert id="insertNotice">
+        INSERT INTO notice (content, startDate, endDate, uploadDate, title, userNo)
+        VALUES (#{content}, #{startDate}, #{endDate}, NOW(), #{title}, #{userNo})
+    </insert>
+
+    <select id="searchNotices" resultType="bitc.ftp.teamproject.vo.admin.AdminNoticeVO">
+        SELECT
+            n.noticeNo AS noticeNo,
+            n.content AS content,
+            n.startDate AS startDate,
+            n.endDate AS endDate,
+            n.uploadDate AS uploadDate,
+            n.title AS title,
+            u.userNo AS userNo,
+            u.name AS name
+        FROM
+            notice n
+                LEFT JOIN user u ON n.userNo = u.userNo
+        WHERE
+            n.title LIKE CONCAT('%', #{keyword}, '%')
+           OR n.content LIKE CONCAT('%', #{keyword}, '%')
+    </select>
+
+    <update id="updateNotice">
+        UPDATE notice
+        SET content = #{content}, startDate = #{startDate}, endDate = #{endDate}, title = #{title}, uploadDate = NOW()
+        WHERE noticeNo = #{noticeNo}
+    </update>
+
+    <delete id="deleteNotice">
+        DELETE FROM notice WHERE noticeNo = #{noticeNo}
+    </delete>
+</mapper>
Index: src/main/resources/mapper/admin/ProductMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/mapper/admin/ProductMapper.xml b/src/main/resources/mapper/admin/ProductMapper.xml
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/resources/mapper/admin/ProductMapper.xml	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,144 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper
+        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
+        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="bitc.ftp.teamproject.mapper.admin.AdminProductMapper">
+
+    <select id="getProductList" resultType="bitc.ftp.teamproject.vo.admin.AdminProductVO">
+        SELECT
+            photo.photoNo AS photoNo,
+            photo.photoName AS photoName,
+            p.productNo AS productNo,
+            p.name AS productName,
+            p.price AS price,
+            c2.category2No AS category2No,
+            c2.name AS category2Name,
+            c2.name_ko AS category2Name_ko,
+            c1.category1No AS category1No,
+            c1.name AS category1Name,
+            c1.name_ko AS category1Name_ko
+        FROM
+            product p
+                LEFT JOIN productPhoto photo ON photo.productNo = p.productNo
+                LEFT JOIN category2 c2 ON p.category2No = c2.category2No
+                LEFT JOIN category1 c1 ON c2.category1No = c1.category1No;
+    </select>
+
+    <select id="searchProducts" resultType="bitc.ftp.teamproject.vo.admin.AdminProductVO">
+        SELECT
+            photo.photoNo AS photoNo,
+            photo.photoName AS photoName,
+            p.productNo AS productNo,
+            p.name AS productName,
+            p.price AS price,
+            c2.category2No AS category2No,
+            c2.name AS category2Name,
+            c2.name_ko AS category2Name_ko,
+            c1.category1No AS category1No,
+            c1.name AS category1Name,
+            c1.name_ko AS category1Name_ko
+        FROM
+            product p
+                LEFT JOIN productPhoto photo ON photo.productNo = p.productNo
+                LEFT JOIN category2 c2 ON p.category2No = c2.category2No
+                LEFT JOIN category1 c1 ON c2.category1No = c1.category1No
+        WHERE
+            p.name LIKE CONCAT('%', #{keyword}, '%');
+    </select>
+
+    <select id="searchProductsByCategory" parameterType="map" resultType="bitc.ftp.teamproject.vo.admin.AdminProductVO">
+        SELECT
+            photo.photoNo AS photoNo,
+            photo.photoName AS photoName,
+            p.productNo AS productNo,
+            p.name AS productName,
+            p.price AS price,
+            c2.category2No AS category2No,
+            c2.name AS category2Name,
+            c2.name_ko AS category2Name_ko,
+            c1.category1No AS category1No,
+            c1.name AS category1Name,
+            c1.name_ko AS category1Name_ko
+        FROM
+            product p
+                LEFT JOIN productPhoto photo ON photo.productNo = p.productNo
+                LEFT JOIN category2 c2 ON p.category2No = c2.category2No
+                LEFT JOIN category1 c1 ON c2.category1No = c1.category1No
+        WHERE
+            p.name LIKE CONCAT('%', #{keyword}, '%')
+          AND c1.name LIKE CONCAT('%', #{category}, '%');
+    </select>
+
+    <select id="getCategory1List" resultType="bitc.ftp.teamproject.vo.admin.AdminCategoryVO">
+        select name, name_ko
+        from category1
+    </select>
+
+    <select id="getProductById" parameterType="int" resultType="bitc.ftp.teamproject.vo.admin.AdminProductVO">
+        SELECT
+            photo.photoNo AS photoNo,
+            photo.photoName AS photoName,
+            p.productNo AS productNo,
+            p.name AS productName,
+            p.price AS price,
+            c2.category2No AS category2No,
+            c2.name AS category2Name,
+            c2.name_ko AS category2Name_ko,
+            c1.category1No AS category1No,
+            c1.name AS category1Name,
+            c1.name_ko AS category1Name_ko
+
+        FROM
+            product p
+                LEFT JOIN productPhoto photo ON photo.productNo = p.productNo
+                LEFT JOIN category2 c2 ON p.category2No = c2.category2No
+                LEFT JOIN category1 c1 ON c2.category1No = c1.category1No
+        WHERE
+            p.productNo = #{productNo};
+    </select>
+
+    <update id="updateProduct" parameterType="bitc.ftp.teamproject.vo.admin.AdminProductVO">
+        UPDATE product
+        SET
+            name = #{productName},
+            price = #{price},
+            category2No = #{category2No}
+        WHERE
+            productNo = #{productNo};
+    </update>
+
+    <update id="updateProductPhoto" parameterType="bitc.ftp.teamproject.vo.admin.AdminProductPhotoVO">
+        Update productPhoto set photoName = #{photoName} where productNo = #{productNo}
+    </update>
+
+    <insert id="insertProduct" useGeneratedKeys="true" keyProperty="productNo">
+        INSERT INTO product (name, price, category2No)
+        VALUES (#{productName}, #{price}, #{category2No})
+    </insert>
+
+    <insert id="insertProductPhoto">
+        INSERT INTO productPhoto (photoName, productNo)
+        VALUES (#{photoName}, #{productNo})
+    </insert>
+
+    <delete id="deleteProduct" parameterType="int">
+        DELETE FROM product WHERE productNo = #{productNo}
+    </delete>
+
+    <select id="findCategory1NameByCategory2No" parameterType="int" resultType="String">
+        SELECT c1.name
+        FROM category1 c1
+                 JOIN category2 c2 ON c1.category1No = c2.category1No
+        WHERE c2.category2No = #{category2No}
+    </select>
+
+    <select id="findCategory2NameByCategory2No" parameterType="int" resultType="String">
+        SELECT name
+        FROM category2
+        WHERE category2No = #{category2No}
+    </select>
+
+    <delete id="deleteProductPhotosByProductNo" parameterType="int">
+        DELETE FROM productPhoto WHERE productNo = #{productNo}
+    </delete>
+</mapper>
Index: src/main/resources/mapper/admin/QuestionMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/mapper/admin/QuestionMapper.xml b/src/main/resources/mapper/admin/QuestionMapper.xml
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/resources/mapper/admin/QuestionMapper.xml	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,32 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper
+        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
+        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="bitc.ftp.teamproject.mapper.admin.AdminQuestionMapper">
+
+    <select id="getQuestionList" resultType="bitc.ftp.teamproject.vo.admin.AdminQuestionVO">
+        SELECT
+            q.questionNo AS questionNo,
+            q.userNo AS userNo,
+            q.content AS content,
+            q.uploadDate AS uploadDate,
+            q.productNo AS productNo,
+            u.userNo AS userNo,
+            u.name AS userName,
+            p.productNo AS productNo,
+            p.name AS productName
+        FROM
+            question q
+                LEFT JOIN
+            user u ON q.userNo = u.userNo
+                LEFT JOIN
+            product p ON q.productNo = p.productNo
+    </select>
+
+    <select id="existsByQuestionNo" resultType="int">
+        SELECT COUNT(*)
+        FROM question
+        WHERE questionNo = #{questionNo}
+    </select>
+
+</mapper>
Index: src/main/resources/mapper/admin/UserMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/mapper/admin/UserMapper.xml b/src/main/resources/mapper/admin/UserMapper.xml
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/resources/mapper/admin/UserMapper.xml	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,74 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper
+        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
+        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="bitc.ftp.teamproject.mapper.admin.AdminUserMapper">
+
+    <select id="getUserList" resultType="bitc.ftp.teamproject.vo.admin.AdminUserVO">
+        SELECT
+            u.userNo,
+            u.name,
+            u.birth,
+            u.tel,
+            u.gender,
+            u.email,
+            u.id,
+            u.pw,
+            u.refundAccount,
+            g.userGradeNo,
+            g.grade
+        FROM
+            user u
+                LEFT JOIN
+            userGrade g ON u.userGradeNo = g.userGradeNo;
+    </select>
+
+    <select id="getUserDetails" resultType="bitc.ftp.teamproject.vo.admin.AdminUserVO">
+        SELECT
+            u.userNo,
+            u.name,
+            u.birth,
+            u.tel,
+            u.gender,
+            u.email,
+            u.id,
+            u.pw,
+            u.refundAccount,
+            g.userGradeNo,
+            g.grade
+        FROM
+            user u
+                LEFT JOIN
+            userGrade g ON u.userGradeNo = g.userGradeNo
+        WHERE
+            u.userNo = #{userNo};
+    </select>
+
+    <delete id="deleteUser">
+        DELETE FROM user WHERE userNo = #{userNo}
+    </delete>
+
+    <select id="searchUsers" resultType="bitc.ftp.teamproject.vo.admin.AdminUserVO">
+        SELECT
+            u.userNo,
+            u.name,
+            u.birth,
+            u.tel,
+            u.gender,
+            u.email,
+            u.id,
+            u.pw,
+            u.refundAccount,
+            g.userGradeNo,
+            g.grade
+        FROM
+            user u
+                LEFT JOIN
+            userGrade g ON u.userGradeNo = g.userGradeNo
+        WHERE
+            u.name LIKE CONCAT('%', #{keyword}, '%')
+           OR u.email LIKE CONCAT('%', #{keyword}, '%')
+           OR u.id LIKE CONCAT('%', #{keyword}, '%');
+    </select>
+
+</mapper>
Index: src/main/resources/static/css/admin/editProduct.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/static/css/admin/editProduct.css b/src/main/resources/static/css/admin/editProduct.css
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/resources/static/css/admin/editProduct.css	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,93 @@
+body {
+    font-family: 'Noto Sans KR', sans-serif;
+}
+
+.container {
+    display: flex;
+}
+
+.sidebar {
+    width: 200px;
+    background-color: #f0f0f0;
+    padding: 15px;
+}
+
+.content {
+    flex-grow: 1;
+    padding: 15px;
+    display: flex;
+    flex-direction: column;
+}
+
+.sidebar a {
+    display: block;
+    padding: 10px;
+    text-decoration: none;
+    color: black;
+    margin-bottom: 5px;
+}
+
+.sidebar a.active {
+    background-color: orange;
+    color: white;
+}
+
+.sidebar a:hover {
+    background-color: #ddd;
+}
+
+.form-container {
+    display: flex;
+    width: 100%;
+}
+
+.photo-preview-container {
+    flex: 1;
+    margin-right: 20px;
+}
+
+.photo-preview {
+    width: 100%;
+    height: 300px;
+    background-color: #e0e0e0;
+    display: flex;
+    align-items: center;
+    justify-content: center;
+    margin-bottom: 15px;
+}
+
+.photo-preview img {
+    max-width: 100%;
+    max-height: 100%;
+}
+
+.form-group-container {
+    flex: 2;
+}
+
+.form-group {
+    margin-bottom: 15px;
+}
+
+.form-group label {
+    display: block;
+    margin-bottom: 5px;
+}
+
+.form-group input {
+    width: 100%;
+    padding: 8px;
+    box-sizing: border-box;
+}
+
+.form-group button {
+    padding: 10px 20px;
+    background-color: blue;
+    color: white;
+    border: none;
+    cursor: pointer;
+}
+
+.form-group button.cancel {
+    background-color: red;
+}
Index: src/main/resources/static/css/admin/style.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/static/css/admin/style.css b/src/main/resources/static/css/admin/style.css
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/resources/static/css/admin/style.css	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,141 @@
+body {
+    font-family: 'Noto Sans KR', sans-serif;
+    margin: 0;
+    padding: 0;
+    background-color: #f9f9f9;
+}
+
+.container {
+    display: flex;
+}
+
+.sidebar {
+    width: 200px;
+    background-color: #e9e9e9;
+    padding: 20px;
+}
+
+.sidebar ul {
+    list-style-type: none;
+    padding: 0;
+}
+
+.sidebar ul li {
+    margin-bottom: 10px;
+}
+
+.sidebar ul li a {
+    text-decoration: none;
+    color: #000;
+    display: block;
+    padding: 10px;
+    background-color: #fff;
+    border: 1px solid #ccc;
+}
+
+.sidebar ul li a.active {
+    background-color: #ffa500;
+    color: #fff;
+}
+
+.main-content {
+    flex-grow: 1;
+    padding: 20px;
+}
+
+.header {
+    display: flex;
+    justify-content: space-between;
+    align-items: center;
+    margin-bottom: 20px;
+}
+
+.header h1 {
+    margin: 0;
+}
+
+.header .search {
+    display: flex;
+    align-items: center;
+}
+
+.header .search input {
+    padding: 5px;
+    margin-right: 10px;
+}
+
+.header .search select {
+    padding: 5px;
+}
+
+table {
+    width: 100%;
+    border-collapse: collapse;
+    margin-bottom: 20px;
+}
+
+table th, table td {
+    border: 1px solid #ccc;
+    padding: 10px;
+    text-align: left;
+}
+
+table th {
+    background-color: #f2f2f2;
+}
+
+.pagination {
+    display: flex;
+    justify-content: center;
+}
+
+.pagination a {
+    text-decoration: none;
+    color: #000;
+    padding: 10px;
+    border: 1px solid #ccc;
+    margin: 0 5px;
+}
+
+.pagination a.active {
+    background-color: #007bff;
+    color: #fff;
+}
+
+.answer-box {
+    display: none;
+    padding: 10px;
+    background-color: #f0f0f0;
+    border: 1px solid #ccc;
+    margin-top: 10px;
+}
+/**/
+.expanded .expandable {
+    display: block;
+}
+
+.question-content .expandable {
+    /*display: none;*/
+    /* Additional styles for the expandable content */
+}
+
+.answer-form {
+    margin-top: 10px;
+}
+
+.button {
+    display: inline-block;
+    padding: 10px 20px;
+    font-size: 16px;
+    text-align: center;
+    text-decoration: none;
+    color: white;
+    background-color: #007bff;
+    border: none;
+    border-radius: 5px;
+    cursor: pointer;
+}
+
+.button:hover {
+    background-color: #0056b3;
+}
Index: src/main/resources/static/delete/noticeList.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/static/delete/noticeList.html b/src/main/resources/static/delete/noticeList.html
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/resources/static/delete/noticeList.html	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,67 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+    <meta charset="UTF-8">
+    <meta name="viewport" content="width=device-width, initial-scale=1.0">
+    <title>공지사항 게시판</title>
+    <link rel="stylesheet" href="/css/style.css">
+</head>
+<body>
+<div class="container">
+    <div class="sidebar">
+        <ul>
+            <li><a href="/delete/productList.htmlhtml">상품목록</a></li>
+            <li><a href="/questions/1" class="active">문의목록</a></li>
+            <li><a href="/delete/userList.htmlhtml">회원목록</a></li>
+            <li><a href="/notices/1">공지목록</a></li>
+        </ul>
+    </div>
+    <div class="main-content">
+        <div class="header">
+            <h1>공지목록</h1>
+            <div class="search">
+                <input type="text" placeholder="검색">
+                <select>
+                    <option>상품분류</option>
+                </select>
+            </div>
+        </div>
+        <table>
+            <thead>
+            <tr>
+                <th>No.</th>
+                <th>공지사항</th>
+                <th>시작일</th>
+                <th>종료일</th>
+                <th>업데이트</th>
+            </tr>
+            </thead>
+            <tbody>
+            <tr>
+                <td>1</td>
+                <td></td>
+                <td></td>
+                <td></td>
+                <td></td>
+            </tr>
+            <tr>
+                <td>2</td>
+                <td></td>
+                <td></td>
+                <td></td>
+                <td></td>
+            </tr>
+            </tbody>
+        </table>
+        <div class="pagination">
+            <a href="#">&lt;</a>
+            <a href="#">1</a>
+            <a href="#" class="active">2</a>
+            <a href="#">3</a>
+            <a href="#">4</a>
+            <a href="#">&gt;</a>
+        </div>
+    </div>
+</div>
+</body>
+</html>
\ No newline at end of file
Index: src/main/resources/static/delete/productList.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/static/delete/productList.html b/src/main/resources/static/delete/productList.html
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/resources/static/delete/productList.html	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,68 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+    <meta charset="UTF-8">
+    <meta name="viewport" content="width=device-width, initial-scale=1.0">
+    <title>상품목록 게시판</title>
+    <link rel="stylesheet" href="/css/style.css">
+</head>
+<body>
+<div class="container">
+    <div class="sidebar">
+        <ul>
+            <li><a href="/delete/productList.html">상품목록</a></li>
+            <li><a href="/questions/1" class="active">문의목록</a></li>
+            <li><a href="/delete/userList.htmlhtml">회원목록</a></li>
+            <li><a href="/notices/1">공지목록</a></li>
+        </ul>
+    </div>
+    <div class="main-content">
+        <div class="header">
+            <h1>상품목록</h1>
+            <div class="search">
+                <input type="text" placeholder="검색">
+                <select>
+                    <option>상품분류</option>
+                </select>
+            </div>
+        </div>
+        <table>
+            <thead>
+            <tr>
+                <th>No.</th>
+                <th>사진</th>
+                <th>상품이름</th>
+                <th>상품가격</th>
+                <th>상품분류</th>
+                <th>상품분류</th>
+            </tr>
+            </thead>
+            <tbody>
+            <tr>
+                <td>1</td>
+                <td></td>
+                <td></td>
+                <td></td>
+                <td></td>
+            </tr>
+            <tr>
+                <td>2</td>
+                <td></td>
+                <td></td>
+                <td></td>
+                <td></td>
+            </tr>
+            </tbody>
+        </table>
+        <div class="pagination">
+            <a href="#">&lt;</a>
+            <a href="#">1</a>
+            <a href="#" class="active">2</a>
+            <a href="#">3</a>
+            <a href="#">4</a>
+            <a href="#">&gt;</a>
+        </div>
+    </div>
+</div>
+</body>
+</html>
\ No newline at end of file
Index: src/main/resources/static/delete/qnaList.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/static/delete/qnaList.html b/src/main/resources/static/delete/qnaList.html
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/resources/static/delete/qnaList.html	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,78 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+    <meta charset="UTF-8">
+    <meta name="viewport" content="width=device-width, initial-scale=1.0">
+    <title>질문답변 게시판</title>
+    <link rel="stylesheet" href="/css/style.css">
+    <style>
+        {
+            display: none;
+        }
+    </style>
+</head>
+<body>
+<div class="container">
+    <div class="sidebar">
+        <ul>
+            <ul>
+                <li><a href="/delete/productList.htmlhtml">상품목록</a></li>
+                <li><a href="/questions/1" class="active">문의목록</a></li>
+                <li><a href="/delete/userList.htmlhtml">회원목록</a></li>
+                <li><a href="/notices/1">공지목록</a></li>
+            </ul>
+        </ul>
+    </div>
+    <div class="main-content">
+        <div class="header">
+            <h1>문의목록</h1>
+            <div class="search">
+                <input type="text" placeholder="검색">
+                <select>
+                    <option>상품분류</option>
+                </select>
+            </div>
+        </div>
+        <table>
+            <thead>
+            <tr>
+                <th>No.</th>
+                <th>문의사항</th>
+                <th>상품이름</th>
+                <th>답변 여부</th>
+            </tr>
+            </thead>
+            <tbody>
+            <tr th:each="question : ${questionList}">
+                <td>
+                    <div th:text="${questionList.questionNo}"></div>
+                </td>
+                <td class="question">
+                    <div th:text="${questionList.content}"></div>
+                </td>
+                <td>
+                    <div th:text="${questionList.productName}"></div>
+                </td>
+                <td class="answer-toggle">미확인</td>
+            </tr>
+
+            </tbody>
+        </table>
+        <div>
+            <td colspan="4">
+                <a class="btn" href="/questions/new">새 문의 만들기</a>
+            </td>
+        </div>
+        <div class="pagination">
+            <a href="#">&lt;</a>
+            <a href="#">1</a>
+            <a href="#" class="active">2</a>
+            <a href="#">3</a>
+            <a href="#">4</a>
+            <a href="#">&gt;</a>
+        </div>
+    </div>
+</div>
+
+</body>
+</html>
\ No newline at end of file
Index: src/main/resources/static/delete/userList.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/static/delete/userList.html b/src/main/resources/static/delete/userList.html
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/resources/static/delete/userList.html	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,73 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+    <meta charset="UTF-8">
+    <meta name="viewport" content="width=device-width, initial-scale=1.0">
+    <title>유저목록 게시판</title>
+    <link rel="stylesheet" href="/css/style.css">
+</head>
+<body>
+<div class="container">
+    <div class="sidebar">
+        <ul>
+            <li><a href="/delete/productList.htmlhtml">상품목록</a></li>
+            <li><a href="/questions/1" class="active">문의목록</a></li>
+            <li><a href="/delete/userList.html">회원목록</a></li>
+            <li><a href="/notices/1">공지목록</a></li>
+        </ul>
+    </div>
+    <div class="main-content">
+        <div class="header">
+            <h1>유저목록</h1>
+            <div class="search">
+                <input type="text" placeholder="검색">
+<!--                <select>-->
+<!--                    <option>상품분류</option>-->
+<!--                </select>-->
+            </div>
+        </div>
+        <table>
+            <thead>
+            <tr>
+                <th>No.</th>
+                <th>이름</th>
+                <th>생년월일</th>
+                <th>전화번호</th>
+                <th>성별</th>
+                <th>이메일</th>
+                <th>ID</th>
+            </tr>
+            </thead>
+            <tbody>
+            <tr>
+                <td>1</td>
+                <td></td>
+                <td></td>
+                <td></td>
+                <td></td>
+                <td></td>
+                <td></td>
+            </tr>
+            <tr>
+                <td>2</td>
+                <td></td>
+                <td></td>
+                <td></td>
+                <td></td>
+                <td></td>
+                <td></td>
+            </tr>
+            </tbody>
+        </table>
+        <div class="pagination">
+            <a href="#">&lt;</a>
+            <a href="#">1</a>
+            <a href="#" class="active">2</a>
+            <a href="#">3</a>
+            <a href="#">4</a>
+            <a href="#">&gt;</a>
+        </div>
+    </div>
+</div>
+</body>
+</html>
\ No newline at end of file
Index: src/main/resources/static/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/static/index.html b/src/main/resources/static/index.html
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/resources/static/index.html	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,28 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+    <meta charset="UTF-8">
+    <meta name="viewport" content="width=device-width, initial-scale=1.0">
+    <title>질문 답변 게시판</title>
+    <link rel="stylesheet" href="/css/style.css">
+</head>
+<body>
+<div class="container">
+    <div class="sidebar">
+        <ul>
+            <ul>
+                <li><a href="/products/1">상품목록</a></li>
+                <li><a href="/questions/1">문의목록</a></li>
+                <li><a href="/users/1">회원목록</a></li>
+                <li><a href="/notices/1">공지목록</a></li>
+            </ul>
+        </ul>
+    </div>
+    <div class="main-content">
+        <div class="header">
+            <h1>메인</h1>
+        </div>
+    </div>
+</div>
+</body>
+</html>
\ No newline at end of file
Index: src/main/resources/templates/admin/addProduct.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/templates/admin/addProduct.html b/src/main/resources/templates/admin/addProduct.html
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/resources/templates/admin/addProduct.html	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,88 @@
+<!DOCTYPE html>
+<html lang="en" xmlns:th="http://www.thymeleaf.org">
+<head>
+    <meta charset="UTF-8">
+    <meta name="viewport" content="width=device-width, initial-scale=1.0">
+    <title>상품 등록</title>
+    <link rel="stylesheet" href="/css/admin/editProduct.css">
+    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
+          integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
+          crossorigin="anonymous">
+    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
+            integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
+            crossorigin="anonymous"></script>
+    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100..900&display=swap" rel="stylesheet">
+
+</head>
+<body>
+<div class="container">
+    <div class="sidebar">
+        <a href="/">메인화면</a>
+        <a href="/admin/products" class="active">상품목록</a>
+        <a href="/admin/questions/1">문의목록</a>
+        <a href="/admin/users/1">회원목록</a>
+        <a href="/admin/notices/1">공지목록</a>
+    </div>
+    <div class="content">
+        <h1>상품 추가</h1>
+        <div class="form-container">
+
+            <div class="form-group-container">
+                <form action="/admin/products/add" method="post" enctype="multipart/form-data">
+                    <div class="photo-preview-container">
+                        <div class="photo-preview">
+                            <img id="photoPreview" src="/images/default.jpg" alt="Product Photo">
+                        </div>
+                        <div class="form-group">
+                            <label for="photo">상품 사진</label>
+                            <input type="file" id="photo" name="photo" accept="image/*" onchange="previewPhoto(event)">
+                        </div>
+                    </div>
+                    <div class="form-group">
+                        <label for="productName">상품 이름</label>
+                        <input type="text" id="productName" name="productName" required>
+                    </div>
+                    <div class="form-group">
+                        <label for="price">가격</label>
+                        <input type="number" id="price" name="price" required>
+                    </div>
+
+                    <div class="form-group">
+                        <label for="category1Name">카테고리 선택</label>
+                        <select id="category1Name" name="category2No" required>
+                            <option value="" disabled selected>카테고리 선택</option>
+                            <th:block th:each="index : ${#numbers.sequence(0, category1List.size() - 1)}">
+                                <optgroup th:label="${category1List[index].name_ko}">
+                                    <th:block th:each="subIndex : ${#numbers.sequence(0, 3)}">
+                                        <th:block th:if="${(index * 4 + subIndex) < category2List.size()}">
+                                            <option th:value="${category2List[index * 4 + subIndex].categoryNo}" th:text="${category2List[index * 4 + subIndex].name_ko}"></option>
+                                        </th:block>
+                                    </th:block>
+                                </optgroup>
+                            </th:block>
+                        </select>
+                    </div>
+
+                    <div class="form-group">
+                        <button type="submit">등록</button>
+                        <button type="button" class="cancel" onclick="window.history.back();">취소</button>
+                    </div>
+                </form>
+            </div>
+        </div>
+    </div>
+</div>
+
+<script>
+    function previewPhoto(event) {
+        const reader = new FileReader();
+        reader.onload = function(){
+            const output = document.getElementById('photoPreview');
+            output.src = reader.result;
+        };
+        reader.readAsDataURL(event.target.files[0]);
+    }
+</script>
+
+</body>
+</html>
Index: src/main/resources/templates/admin/createNotice.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/templates/admin/createNotice.html b/src/main/resources/templates/admin/createNotice.html
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/resources/templates/admin/createNotice.html	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,59 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+    <meta charset="UTF-8">
+    <meta name="viewport" content="width=device-width, initial-scale=1.0">
+    <title>새 공지 작성</title>
+    <link rel="stylesheet" href="/css/admin/style.css">
+    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
+          integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
+          crossorigin="anonymous">
+    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
+            integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
+            crossorigin="anonymous"></script>
+    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100..900&display=swap" rel="stylesheet">
+</head>
+<body>
+<div class="container">
+    <div class="sidebar">
+        <ul>
+            <li><a href="/">메인화면</a></li>
+            <li><a href="/admin/products">상품목록</a></li>
+            <li><a href="/admin/questions/1">문의목록</a></li>
+            <li><a href="/admin/users/1">회원목록</a></li>
+            <li><a href="/admin/notices/1" class="active">공지목록</a></li>
+        </ul>
+    </div>
+    <div class="main-content">
+        <div class="header">
+            <h1>새 공지 작성</h1>
+        </div>
+        <form th:action="@{/admin/notices/new}" th:object="${notice}" method="post">
+            <div class="form-group">
+                <label for="title">제목:</label>
+                <input type="text" class="form-control" id="title" th:field="*{title}" required>
+            </div>
+            <div class="form-group">
+                <label for="content">내용:</label>
+                <textarea class="form-control" id="content" th:field="*{content}" required></textarea>
+            </div>
+            <div class="form-group">
+                <label for="startDate">시작일:</label>
+                <input type="date" class="form-control" id="startDate" th:field="*{startDate}" required>
+            </div>
+            <div class="form-group">
+                <label for="endDate">종료일:</label>
+                <input type="date" class="form-control" id="endDate" th:field="*{endDate}" required>
+            </div>
+
+            <div class="form-group">
+                <label for="name">작성자 이름:</label>
+                <input type="text" class="form-control" id="name" th:value="${name}" readonly>
+            </div>
+
+            <button type="submit" class="btn btn-primary">작성</button>
+        </form>
+    </div>
+</div>
+</body>
+</html>
Index: src/main/resources/templates/admin/editProduct.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/templates/admin/editProduct.html b/src/main/resources/templates/admin/editProduct.html
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/resources/templates/admin/editProduct.html	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,103 @@
+<!DOCTYPE html>
+<html lang="en" xmlns:th="http://www.thymeleaf.org">
+<head>
+    <meta charset="UTF-8">
+    <meta name="viewport" content="width=device-width, initial-scale=1.0">
+    <title>Edit Product</title>
+    <link rel="stylesheet" href="/css/admin/editProduct.css">
+    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
+          integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
+          crossorigin="anonymous">
+    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
+            integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
+            crossorigin="anonymous"></script>
+
+    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100..900&display=swap" rel="stylesheet">
+
+</head>
+<body>
+<div class="container">
+    <div class="sidebar">
+        <a href="/">메인화면</a>
+        <a href="/admin/products" class="active">상품목록</a>
+        <a href="/admin/questions/1">문의목록</a>
+        <a href="/admin/users/1">회원목록</a>
+        <a href="/admin/notices/1">공지목록</a>
+    </div>
+    <div class="content">
+        <h1>상품 수정</h1>
+        <div class="form-container">
+            <div class="photo-preview-container">
+                <div class="photo-preview">
+                    <img id="photoPreview" th:src="@{${imageUrl}}" alt="Product Photo">
+                </div>
+            </div>
+            <div class="form-group-container">
+                <form action="/admin/products/update" method="post" enctype="multipart/form-data">
+                    <div class="form-group">
+                        <label for="photo">상품 사진</label>
+                        <input type="file" id="photo" name="photo" accept="image/*" onchange="previewPhoto(event)">
+                    </div>
+                    <input type="hidden" name="productNo" th:value="${product.productNo}">
+
+                    <div class="form-group">
+                        <label for="productName">상품 이름</label>
+                        <input type="text" id="productName" name="productName" th:value="${product.productName}"
+                               required>
+                    </div>
+                    <div class="form-group">
+                        <label for="price">가격</label>
+                        <input type="number" id="price" name="price" th:value="${product.price}" required>
+                    </div>
+
+                    <div class="form-group">
+                        <label for="category1Name">카테고리 선택</label>
+                        <select id="category1Name" name="category2No" required>
+                            <option value="" disabled selected>카테고리 선택</option>
+                            <th:block th:each="index : ${#numbers.sequence(0, category1List.size() - 1)}">
+                                <optgroup th:label="${category1List[index].name_ko}">
+                                    <th:block th:each="subIndex : ${#numbers.sequence(0, 3)}">
+                                        <th:block th:if="${(index * 4 + subIndex) < category2List.size()}">
+                                            <option th:value="${category2List[index * 4 + subIndex].categoryNo}"
+                                                    th:text="${category2List[index * 4 + subIndex].name_ko}"></option>
+                                        </th:block>
+                                    </th:block>
+                                </optgroup>
+                            </th:block>
+                        </select>
+                    </div>
+
+                    <!-- 숨김 필드로 category2No 값 전송 -->
+                    <input type="hidden" name="category2No" th:value="${product.category2No}">
+
+                    <div class="form-group">
+                        <button type="submit">등록</button>
+                        <button type="button" class="cancel" onclick="window.history.back();">취소</button>
+                    </div>
+                </form>
+
+                <form action="/admin/products/delete" method="post">
+                    <input type="hidden" name="_method" value="DELETE">
+                    <input type="hidden" name="productNo" th:value="${product.productNo}">
+                    <button type="submit" class="btn btn-danger">삭제</button>
+                </form>
+
+            </div>
+        </div>
+    </div>
+</div>
+
+<script>
+    function previewPhoto(event) {
+        const reader = new FileReader();
+        reader.onload = function () {
+            const output = document.getElementById('photoPreview');
+            output.src = reader.result;
+        };
+        reader.readAsDataURL(event.target.files[0]);
+    }
+
+</script>
+
+</body>
+</html>
Index: src/main/resources/templates/admin/noticeDetails.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/templates/admin/noticeDetails.html b/src/main/resources/templates/admin/noticeDetails.html
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/resources/templates/admin/noticeDetails.html	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,83 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+    <meta charset="UTF-8">
+    <meta name="viewport" content="width=device-width, initial-scale=1.0">
+    <title>공지사항 상세</title>
+    <link rel="stylesheet" href="/css/admin/style.css">
+    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
+          integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
+          crossorigin="anonymous">
+    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
+            integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
+            crossorigin="anonymous"></script>
+    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100..900&display=swap" rel="stylesheet">
+</head>
+<body>
+<div class="container">
+    <div class="sidebar">
+        <ul>
+            <li><a href="/">메인화면</a></li>
+            <li><a href="/admin/products">상품목록</a></li>
+            <li><a href="/admin/questions/1">문의목록</a></li>
+            <li><a href="/admin/users/1">회원목록</a></li>
+            <li><a href="/admin/notices/1" class="active">공지목록</a></li>
+        </ul>
+    </div>
+    <div class="main-content">
+        <div class="header">
+            <h1 th:text="${notice.title}">공지사항 제목</h1>
+        </div>
+        <div class="content">
+            <p th:text="${notice.content}">공지사항 내용</p>
+        </div>
+        <div class="details">
+            <p>시작일: <span th:text="${#dates.format(notice.startDate, 'yyyy-MM-dd')}">시작일자</span></p>
+            <p>종료일: <span th:text="${#dates.format(notice.endDate, 'yyyy-MM-dd')}">종료일자</span></p>
+            <p>등록일: <span th:text="${#dates.format(notice.uploadDate, 'yyyy-MM-dd')}">등록일자</span></p>
+            <p>작성자: <span th:text="${notice.name}">작성자명</span></p>
+        </div>
+        <button class="btn btn-secondary" onclick="toggleEditForm()">수정하기</button>
+        <form th:action="@{/admin/notices/delete}" method="post" style="display:inline;">
+            <input type="hidden" name="_method" value="DELETE"/>
+            <input type="hidden" name="noticeNo" th:value="${notice.noticeNo}"/>
+            <button type="submit" class="btn btn-danger">삭제</button>
+        </form>
+        <div id="editForm" style="display:none; margin-top: 20px;">
+            <h2>공지 수정</h2>
+            <form th:action="@{/admin/notices/edit}" method="post">
+                <input type="hidden" name="noticeNo" th:value="${notice.noticeNo}">
+                <div class="form-group">
+                    <label for="title">제목</label>
+                    <input type="text" class="form-control" id="title" name="title" th:value="${notice.title}" required>
+                </div>
+                <div class="form-group">
+                    <label for="content">내용</label>
+                    <textarea class="form-control" id="content" name="content" required th:text="${notice.content}"></textarea>
+                </div>
+                <div class="form-group">
+                    <label for="startDate">시작일</label>
+                    <input type="date" class="form-control" id="startDate" name="startDate" th:value="${#dates.format(notice.startDate, 'yyyy-MM-dd')}" required>
+                </div>
+                <div class="form-group">
+                    <label for="endDate">종료일</label>
+                    <input type="date" class="form-control" id="endDate" name="endDate" th:value="${#dates.format(notice.endDate, 'yyyy-MM-dd')}" required>
+                </div>
+                <button type="submit" class="btn btn-primary">수정</button>
+            </form>
+        </div>
+    </div>
+</div>
+
+<script>
+    function toggleEditForm() {
+        var form = document.getElementById('editForm');
+        if (form.style.display === 'none') {
+            form.style.display = 'block';
+        } else {
+            form.style.display = 'none';
+        }
+    }
+</script>
+</body>
+</html>
Index: src/main/resources/templates/admin/notices.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/templates/admin/notices.html b/src/main/resources/templates/admin/notices.html
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/resources/templates/admin/notices.html	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,65 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+    <meta charset="UTF-8">
+    <meta name="viewport" content="width=device-width, initial-scale=1.0">
+    <title>공지사항 게시판</title>
+    <link rel="stylesheet" href="/css/admin/style.css">
+    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
+          integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
+          crossorigin="anonymous">
+    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
+            integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
+            crossorigin="anonymous"></script>
+    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100..900&display=swap" rel="stylesheet">
+</head>
+<body>
+<div class="container">
+    <div class="sidebar">
+        <ul>
+            <li><a href="/">메인화면</a></li>
+            <li><a href="/admin/products">상품목록</a></li>
+            <li><a href="/admin/questions/1">문의목록</a></li>
+            <li><a href="/admin/users/1">회원목록</a></li>
+            <li><a href="/admin/notices/1" class="active">공지목록</a></li>
+        </ul>
+    </div>
+    <div class="main-content">
+        <div class="header">
+            <h1>공지목록</h1>
+            <div class="search">
+                <form action="/admin/notices/search" method="get">
+                    <input type="text" name="keyword" placeholder="검색">
+                    <button type="submit">검색</button>
+                </form>
+            </div>
+        </div>
+        <table class="table">
+            <thead>
+            <tr>
+                <th>No.</th>
+                <th>공지사항</th>
+                <th>시작일자</th>
+                <th>종료일자</th>
+                <th>등록일자</th>
+            </tr>
+            </thead>
+            <tbody>
+            <tr th:each="notice : ${noticeList}">
+                <td th:text="${notice.noticeNo}"></td>
+                <td class="notice">
+                    <a th:href="@{'/admin/notices/details/' + ${notice.noticeNo}}" th:text="${notice.title}"></a>
+                </td>
+                <td th:text="${#dates.format(notice.startDate, 'yyyy-MM-dd E')}"></td>
+                <td th:text="${#dates.format(notice.endDate, 'yyyy-MM-dd E')}"></td>
+                <td th:text="${#dates.format(notice.uploadDate, 'yyyy-MM-dd E')}"></td>
+            </tr>
+            </tbody>
+        </table>
+        <div>
+            <a href="/admin/notices/new" class="btn btn-primary">새 공지 만들기</a>
+        </div>
+    </div>
+</div>
+</body>
+</html>
Index: src/main/resources/templates/admin/products.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/templates/admin/products.html b/src/main/resources/templates/admin/products.html
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/resources/templates/admin/products.html	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,86 @@
+<!DOCTYPE html>
+<html lang="en" xmlns:th="http://www.thymeleaf.org">
+<head>
+    <meta charset="UTF-8">
+    <meta name="viewport" content="width=device-width, initial-scale=1.0">
+    <title>상품목록 게시판</title>
+    <link rel="stylesheet" href="/css/admin/style.css">
+    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100..900&display=swap" rel="stylesheet">
+    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
+          integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
+          crossorigin="anonymous">
+    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
+            integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
+            crossorigin="anonymous"></script>
+</head>
+<body>
+<!--<th:block th:replace="~{fragments/fragments.nav :: nav}"></th:block>-->
+<div class="container">
+    <div class="sidebar">
+        <ul>
+            <li><a href="/">메인화면</a></li>
+            <li><a href="/admin/products" class="active">상품목록</a></li>
+            <li><a href="/admin/questions/1">문의목록</a></li>
+            <li><a href="/admin/users/1">회원목록</a></li>
+            <li><a href="/admin/notices/1">공지목록</a></li>
+        </ul>
+    </div>
+    <div class="main-content">
+        <div class="header">
+            <h1>상품목록</h1>
+            <div class="search">
+                <a href="/admin/products/add" class="btn btn-primary" style="display: inline-block; margin-left: 10px; margin-right: 10px">상품 등록</a>
+                <form action="/admin/products/search" method="GET">
+                    <input type="text" name="keyword" placeholder="검색어를 입력하세요">
+                    <select name="category">
+                        <option th:each="c: ${category1List}"
+                                th:value="${c.getName()}"
+                                th:text="${c.getNameKo()}"></option>
+                    </select>
+                    <button type="submit">검색</button>
+                </form>
+            </div>
+        </div>
+        <table>
+            <thead>
+            <tr>
+                <th>No.</th>
+                <th>사진</th>
+                <th>상품이름</th>
+                <th>상품가격</th>
+                <th>상품분류01</th>
+                <th>상품분류02</th>
+            </tr>
+            </thead>
+            <tbody>
+            <tr th:each="product : ${productList}">
+                <td><div th:text="${product.productNo}"></div></td>
+                <td>
+                    <a th:href="@{/admin/products/edit/{productNo}(productNo=${product.productNo})}">
+                        <img th:src="@{'/images' + ${product.photoName} +'.jpg'}" width="100">
+                    </a>
+                </td>
+                <td>
+                    <div>
+                        <a th:href="@{/admin/products/edit/{productNo}(productNo=${product.productNo})}">
+                            <span th:text="${product.productName}"></span>
+                        </a>
+                    </div>
+                </td>
+                <td><div th:text="${product.price}"></div></td>
+                <td><div th:text="${product.category1Name_ko}"></div></td>
+                <td><div th:text="${product.category2Name_ko}"></div></td>
+            </tr>
+            </tbody>
+        </table>
+        <div class="pagination">
+            <a th:if="${currentPage > 1}" th:href="@{/admin/products(page=${currentPage - 1}, size=${size})}">&lt;</a>
+            <span th:each="i : ${#numbers.sequence(1, totalPages != null ? totalPages : 1)}">
+                <a th:href="@{/admin/products(page=${i}, size=${size})}" th:text="${i}" th:classappend="${i == currentPage} ? 'active'"></a>
+            </span>
+            <a th:if="${currentPage < totalPages}" th:href="@{/products(page=${currentPage + 1}, size=${size})}">&gt;</a>
+        </div>
+    </div>
+</div>
+</body>
+</html>
Index: src/main/resources/templates/admin/questions.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/templates/admin/questions.html b/src/main/resources/templates/admin/questions.html
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/resources/templates/admin/questions.html	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,142 @@
+<!DOCTYPE html>
+<html lang="en" xmlns:th="http://www.thymeleaf.org">
+<head>
+    <meta charset="UTF-8">
+    <meta name="viewport" content="width=device-width, initial-scale=1.0">
+    <title>질문 답변 게시판</title>
+    <link rel="stylesheet" href="/css/admin/style.css">
+    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
+          integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
+          crossorigin="anonymous">
+    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
+            integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
+            crossorigin="anonymous"></script>
+
+    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100..900&display=swap" rel="stylesheet">
+
+</head>
+<body>
+<div class="container">
+    <div class="sidebar">
+        <ul>
+            <li><a href="/">메인화면</a></li>
+            <li><a href="/admin/products">상품목록</a></li>
+            <li><a href="/admin/questions/1" class="active">문의목록</a></li>
+            <li><a href="/admin/users/1">회원목록</a></li>
+            <li><a href="/admin/notices/1">공지목록</a></li>
+        </ul>
+    </div>
+    <div class="main-content">
+        <div class="header">
+            <h1>문의목록</h1>
+        </div>
+        <table>
+            <thead>
+            <tr>
+                <th>No.</th>
+                <th>문의사항</th>
+                <th>상품이름</th>
+                <th>답변 여부</th>
+            </tr>
+            </thead>
+            <tbody>
+            <tr th:each="question : ${questionList}" class="question-row"
+                th:data-questionno="${question.questionNo}"
+                th:data-content="${question.content}"
+                th:data-answercontent="${question.answerContent}">
+                <td>
+                    <div th:text="${question.questionNo}"></div>
+                </td>
+                <td class="question-content">
+                    <div th:text="${question.content}" class="expandable"></div>
+                </td>
+                <td>
+                    <div th:text="${question.productName}"></div>
+                </td>
+                <td class="answer-toggle" th:text="${question.hasAnswer ? '확인' : '미확인'}">미확인</td>
+            </tr>
+            </tbody>
+        </table>
+    </div>
+</div>
+
+<!-- 답변 입력 모달 -->
+<div id="answerModal" class="modal fade" tabindex="-1" role="dialog">
+    <div class="modal-dialog" role="document">
+        <div class="modal-content">
+            <div class="modal-header">
+                <h5 class="modal-title">답변 작성</h5>
+                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
+                </button>
+            </div>
+            <div class="modal-body">
+                <p><strong>질문 내용:</strong></p>
+                <p id="questionContent"></p>
+                <hr>
+                <p><strong>기존 답변:</strong></p>
+                <p id="existingAnswerContent">답변이 없습니다.</p>
+                <hr>
+                <form id="answerForm">
+                    <div class="form-group">
+                        <textarea id="answerContent" class="form-control" placeholder="답변을 입력하세요"></textarea>
+                    </div>
+                    <button type="submit" class="btn btn-primary">제출</button>
+                </form>
+            </div>
+        </div>
+    </div>
+</div>
+
+<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
+<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
+
+<script>
+    $(document).ready(function() {
+        let userNo = 1; // 현재 로그인한 사용자의 userNo 값을 설정해야 합니다.
+
+        $('.answer-toggle').on('click', function() {
+            let questionRow = $(this).closest('.question-row');
+            let questionNo = questionRow.data('questionno');
+            let questionContent = questionRow.data('content');
+            let answerContent = questionRow.data('answercontent');
+
+            $('#answerForm').data('questionno', questionNo);
+            $('#questionContent').text(questionContent);
+            $('#existingAnswerContent').text(answerContent ? answerContent : '답변이 없습니다.');
+            $('#answerModal').modal('show');
+        });
+
+        $('#answerForm').on('submit', function(event) {
+            event.preventDefault();
+            let answerContent = $('#answerContent').val();
+            let questionNo = $('#answerForm').data('questionno');
+            let questionRow = $(`.question-row[data-questionno="${questionNo}"]`);
+
+            $.ajax({
+                url: '/admin/answers',
+                method: 'POST',
+                contentType: 'application/json',
+                data: JSON.stringify({
+                    questionNo: questionNo,
+                    content: answerContent,
+                    userNo: userNo // userNo 값을 함께 전달
+                }),
+                success: function(response) {
+                    alert('답변이 저장되었습니다.');
+                    $('#answerModal').modal('hide');
+                    questionRow.find('.answer-toggle').text('확인');
+                    questionRow.data('answercontent', answerContent); // 새로운 답변 내용 업데이트
+                },
+                error: function(error) {
+                    alert('오류가 발생했습니다.');
+                }
+            });
+        });
+
+        $('#closeModal').on('click', function() {
+            $('#answerModal').modal('hide');
+        });
+    });
+</script>
+</body>
+</html>
Index: src/main/resources/templates/admin/users.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/templates/admin/users.html b/src/main/resources/templates/admin/users.html
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/resources/templates/admin/users.html	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,170 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+    <meta charset="UTF-8">
+    <meta name="viewport" content="width=device-width, initial-scale=1.0">
+    <title>회원목록 게시판</title>
+    <link rel="stylesheet" href="/css/admin/style.css">
+    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
+          integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
+          crossorigin="anonymous">
+    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
+            integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
+            crossorigin="anonymous"></script>
+
+    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100..900&display=swap" rel="stylesheet">
+
+</head>
+<body>
+<div class="container">
+    <div class="sidebar">
+        <ul>
+            <ul>
+                <li><a href="/">메인화면</a></li>
+                <li><a href="/admin/products">상품목록</a></li>
+                <li><a href="/admin/questions/1">문의목록</a></li>
+                <li><a href="/admin/users/1" class="active">회원목록</a></li>
+                <li><a href="/admin/notices/1">공지목록</a></li>
+            </ul>
+        </ul>
+    </div>
+    <div class="main-content">
+
+        <div class="header">
+            <h1>회원목록</h1>
+            <form action="/admin/users/search" method="get">
+                <input type="text" id="searchInput" name="keyword" placeholder="검색">
+                <button type="submit">검색</button>
+            </form>
+        </div>
+
+        <table class="table">
+            <thead>
+            <tr>
+                <th>No.</th>
+                <th>이름</th>
+                <th>생년월일</th>
+                <th>전화번호</th>
+                <th>성별</th>
+                <th>이메일</th>
+                <th>ID</th>
+                <th>X</th>
+            </tr>
+            </thead>
+            <tbody>
+            <!-- 사용자 목록을 반복하면서 각 사용자에 대한 정보를 표시합니다. -->
+            <tr th:each="user : ${userList}" th:onclick="|showUserDetails([[${user.userNo}]])|">
+                <td th:text="${user.userNo}"></td>
+                <td class="notice" th:text="${user.name}"></td>
+                <td th:text="${user.birth}"></td>
+                <td th:text="${user.tel}"></td>
+                <td th:text="${user.gender == 1 ? '남' : '여'}"></td>
+                <td th:text="${user.email}"></td>
+                <td th:text="${user.id}"></td>
+                <td>
+                    <!-- 삭제 버튼을 클릭하면 showDeleteModal 함수가 호출됩니다. -->
+                    <button class="btn btn-danger btn-sm" th:onclick="|event.stopPropagation(); showDeleteModal([[${user.userNo}]])|">삭제</button>
+                </td>
+            </tr>
+            </tbody>
+        </table>
+    </div>
+</div>
+
+<!-- 삭제 확인 모달 -->
+<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
+    <div class="modal-dialog" role="document">
+        <div class="modal-content">
+            <div class="modal-header">
+                <h5 class="modal-title" id="deleteModalLabel">회원 삭제</h5>
+                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
+                </button>
+            </div>
+            <div class="modal-body">
+                <p><strong>이름:</strong> <span id="deleteName"></span></p>
+                <p><strong>생년월일:</strong> <span id="deleteBirth"></span></p>
+                <p><strong>전화번호:</strong> <span id="deleteTel"></span></p>
+                <p><strong>성별:</strong> <span id="deleteGender"></span></p>
+                <p><strong>이메일:</strong> <span id="deleteEmail"></span></p>
+                <p><strong>ID:</strong> <span id="deleteId"></span></p>
+                <p>정말로 이 회원을 삭제하시겠습니까?</p>
+            </div>
+            <div class="modal-footer">
+                <button type="button" class="btn btn-secondary" data-dismiss="modal">취소</button>
+                <button type="button" class="btn btn-danger" id="confirmDeleteButton">삭제</button>
+            </div>
+        </div>
+    </div>
+</div>
+
+<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
+<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
+<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
+
+<script>
+    // 사용자 상세 정보를 모달에 표시하는 함수
+    function showUserDetails(userNo) {
+        fetch(`/admin/users/details/${userNo}`)
+            .then(response => response.json())
+            .then(data => {
+                document.getElementById('detailName').innerText = data.name;
+                document.getElementById('detailBirth').innerText = data.birth;
+                document.getElementById('detailTel').innerText = data.tel;
+                document.getElementById('detailGender').innerText = data.gender === 1 ? '남' : '여';
+                document.getElementById('detailEmail').innerText = data.email;
+                document.getElementById('detailId').innerText = data.id;
+                document.getElementById('detailGrade').innerText = data.grade;
+
+                $('#userDetailModal').modal('show');
+            })
+            .catch(error => console.error('Error:', error));
+    }
+
+    // 삭제 모달을 표시하고 해당 사용자 정보를 설정하는 함수
+    function showDeleteModal(userNo) {
+        fetch(`/admin/users/details/${userNo}`)
+            .then(response => response.json())
+            .then(data => {
+                document.getElementById('deleteName').innerText = data.name;
+                document.getElementById('deleteBirth').innerText = data.birth;
+                document.getElementById('deleteTel').innerText = data.tel;
+                document.getElementById('deleteGender').innerText = data.gender === 1 ? '남' : '여';
+                document.getElementById('deleteEmail').innerText = data.email;
+                document.getElementById('deleteId').innerText = data.id;
+
+                // 삭제 버튼에 사용자 번호를 데이터 속성으로 저장
+                $('#confirmDeleteButton').data('userNo', userNo);
+                $('#deleteModal').modal('show');
+            })
+            .catch(error => console.error('Error:', error));
+    }
+
+    $(document).ready(function() {
+        // 삭제 확인 버튼 클릭 시 사용자 삭제 요청을 서버로 보냄
+        $('#confirmDeleteButton').click(function() {
+            var userNo = $(this).data('userNo');
+            fetch(`/admin/users/delete/${userNo}`, {
+                method: 'DELETE',
+                headers: {
+                    'Content-Type': 'application/json'
+                }
+            })
+                .then(response => {
+                    if (response.ok) {
+                        location.reload();  // 성공 시 페이지를 새로고침하여 목록 업데이트
+                    } else {
+                        console.error('Delete failed');
+                    }
+                })
+                .catch(error => console.error('Error:', error));
+        });
+    });
+
+    // function searchUsers() {
+    //     const searchKeyword = document.getElementById('searchInput').value;
+    //     window.location.href = `/users/search?keyword=${encodeURIComponent(searchKeyword)}`;
+    // }
+
+</script>
+</body>
+</html>
Index: src/main/resources/templates/notice.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/templates/notice.html b/src/main/resources/templates/notice.html
new file mode 100644
--- /dev/null	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
+++ b/src/main/resources/templates/notice.html	(revision 1e9b0b700b6939f32bf5b15914758503ff2cfd47)
@@ -0,0 +1,76 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+    <th:block th:replace="~{fragments/fragment :: config}"></th:block>
+    <title>My Page</title>
+</head>
+<body>
+<th:block th:replace="~{fragments/fragments.nav :: nav}"></th:block>
+<div class="d-flex">
+    <th:block th:replace="~{fragments/fragments.side :: sideBar}"></th:block>
+    <div class="content w-100 mt-3">
+        <div class="content-title text-center">
+            <h2>공지 사항</h2>
+            <hr>
+        </div>
+        <div class="content-body mx-auto justify-content-center" style="width:90%;">
+            <table class="table table-hover">
+                <thead>
+                    <tr class="table-warning">
+                        <th>No.</th>
+                        <th>공지사항</th>
+                        <th>시작일자</th>
+                        <th>종료일자</th>
+                        <th>등록일자</th>
+                    </tr>
+                </thead>
+                <tbody>
+                    <th:block th:each="notice : ${noticeList}">
+                        <tr th:id="${notice.noticeNo}" class="noticetr">
+                            <td th:text="${notice.noticeNo}"></td>
+                            <td th:id="|noticeTitle${notice.noticeNo}|" class="notice" th:text="${notice.title}"></td>
+                            <td th:text="${#dates.format(notice.startDate, 'yyyy-MM-dd E')}"></td>
+                            <td th:text="${#dates.format(notice.endDate, 'yyyy-MM-dd E')}"></td>
+                            <td th:text="${#dates.format(notice.uploadDate, 'yyyy-MM-dd E')}"></td>
+                        </tr>
+                        <input type="hidden" th:id="|noticeContent${notice.noticeNo}|" th:value="${notice.content}">
+                    </th:block>
+                </tbody>
+            </table>
+        </div>
+    </div>
+</div>
+
+<div class="modal fade customModal" id="form" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="noticeLabel" aria-hidden="true">
+    <div class="modal-dialog">
+        <div class="modal-content">
+            <div class="modal-header">
+                <h1 class="modal-title fs-5" id="noticeLabel">공지 사항</h1>
+                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
+            </div>
+            <form th:object="${notice}" th:action="@{/mypage/question/update}" method="post">
+                <div class="modal-body">
+                    <label class="mb-3 d-block">제목</label>
+                    <input type="text" class="form-control-plaintext w-100 mb-3" th:field="*{title}" readonly>
+
+                    <label for="content" class="mb-3">공지 내용</label>
+                    <textarea class="form-control w-100 mb-3" rows="5" th:field="*{content}" readonly></textarea>
+                </div>
+                <div class="modal-footer">
+                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">취소</button>
+                </div>
+            </form>
+        </div>
+    </div>
+</div>
+<script>
+    $(".noticetr").click(function(){
+        var data = $(this).attr('id');
+        $("#title").val($("#noticeTitle"+data).text());
+        $("#content").val($("#noticeContent"+data).val());
+        $(".customModal").modal('toggle');
+        $(".customModal").modal('show');
+    });
+</script>
+</body>
+</html>
\ No newline at end of file
diff --git a/src/main/resources/static/images/fanProduct/living/f6371b91-90fe-422e-b038-ffad0b3af639.jpg b/src/main/resources/static/images/fanProduct/living/f6371b91-90fe-422e-b038-ffad0b3af639.jpg
new file mode 100644
index 0000000000000000000000000000000000000000..cd22a2530d167ba23ca551c0e4c7e421bc18c765
GIT binary patch
literal 9888
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
a`gZE+x#24}z<BRjt*2?VSEkO*_x}av6EI}}

diff --git a/src/main/resources/static/images/uniform/replica/c0d4cfa5-c69f-4d96-84a5-432146c84985.jpg b/src/main/resources/static/images/uniform/replica/c0d4cfa5-c69f-4d96-84a5-432146c84985.jpg
new file mode 100644
index 0000000000000000000000000000000000000000..69c65c474413ecc1a203c891522ac8bec3cbfbdf
GIT binary patch
literal 5345
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
QRt+MHUi<aM=ZCrf0^^M5&j0`b

